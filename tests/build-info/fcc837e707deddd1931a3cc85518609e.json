{
	"id": "fcc837e707deddd1931a3cc85518609e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract DataLiquidityPoolImplementationV3Mock is UUPSUpgradeable {\n    uint256 public test;\n\n    function _authorizeUpgrade(address newImplementation) internal virtual override {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 MULMOD PUSH23 0x27847E7B1B3961AC8917BFAEEAAD3D7F005987E102606 0x22 CALLVALUE BASEFEE 0xC CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "449:6273:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xB9 MULMOD PUSH23 0x27847E7B1B3961AC8917BFAEEAAD3D7F005987E102606 0x22 CALLVALUE BASEFEE 0xC CREATE2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "449:6273:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3b90976027847e7b1b3961ac8917bfaeeaad3d7f005987e1026062234480cf564736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 SGT PUSH1 0x72 0xB9 DELEGATECALL 0xC0 PUSH25 0xED84D9AED48871292807A66BDE8217A15371A57AAB632C0064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088136072b9f4c078ed84d9aed48871292807a66bde8217a15371a57aab632c0064736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xDE DUP2 XOR SLOAD JUMPI 0xC7 0xB3 SHL PUSH23 0x6A5D9E994BEC595239B32A0552536F64F0A64F1E90B164 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "1245:2685:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5de81185457c7b31b766a5d9e994bec595239b32a0552536f64f0a64f1e90b164736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol": {
				"DataLiquidityPoolImplementationV3Mock": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":144:326  contract DataLiquidityPoolImplementationV3Mock is UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":144:326  contract DataLiquidityPoolImplementationV3Mock is UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":144:326  contract DataLiquidityPoolImplementationV3Mock is UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f1ef286\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_2:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":216:235  uint256 public test */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_9:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_26\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_27\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_29\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_30\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_29:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_31\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_32\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_34\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_34:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3800:3832  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3793:3832  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_17:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":216:235  uint256 public test */\n    tag_22:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_27:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_38\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_39\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4779  ERC1967Utils.getImplementation */\n      tag_40\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_38:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_41\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":242:324  function _authorizeUpgrade(address newImplementation) internal virtual override {} */\n    tag_30:\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_44\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x01\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6555:6572  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6253:6285  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6249  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_54\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6341:6345  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_56\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_57\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x980c46aeb242fb2816eec3c43a568cdc6adda404b46e62cce4e3fe7d929881e3\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_59\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2009:2016  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_61\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2062:2081  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2061  StorageSlot.getAddressSlot */\n      tag_62\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2082  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2028:2088  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_64\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_65\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2931:2948  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2978:2979  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2968  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      iszero\n      tag_66\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_67\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_68\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_67:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      jump(tag_69)\n    tag_66:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_70\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_71\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n    tag_70:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1745:1766  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1854:1858  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1844:1858  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1684:1874  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_74\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2349:2366  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2443:2460  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_76\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1327:1393  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2414:2433  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2413  StorageSlot.getAddressSlot */\n      tag_62\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2434  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2440  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_82\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_81)\n    tag_82:\n      0x60\n      swap2\n      pop\n    tag_81:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_83\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_84\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_84:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_88\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_89\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_90\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_91)\n    tag_88:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_92\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_87)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_87:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_98:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_99:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_100:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_101:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_102:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_135\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_101\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_103:\n        /* \"#utility.yul\":641:665   */\n      tag_137\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_102\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_138:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_104:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_140\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_103\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:958   */\n    tag_105:\n        /* \"#utility.yul\":950:951   */\n      0x00\n        /* \"#utility.yul\":947:948   */\n      dup1\n        /* \"#utility.yul\":940:952   */\n      revert\n        /* \"#utility.yul\":964:1081   */\n    tag_106:\n        /* \"#utility.yul\":1073:1074   */\n      0x00\n        /* \"#utility.yul\":1070:1071   */\n      dup1\n        /* \"#utility.yul\":1063:1075   */\n      revert\n        /* \"#utility.yul\":1087:1189   */\n    tag_107:\n        /* \"#utility.yul\":1128:1134   */\n      0x00\n        /* \"#utility.yul\":1179:1181   */\n      0x1f\n        /* \"#utility.yul\":1175:1182   */\n      not\n        /* \"#utility.yul\":1170:1172   */\n      0x1f\n        /* \"#utility.yul\":1163:1168   */\n      dup4\n        /* \"#utility.yul\":1159:1173   */\n      add\n        /* \"#utility.yul\":1155:1183   */\n      and\n        /* \"#utility.yul\":1145:1183   */\n      swap1\n      pop\n        /* \"#utility.yul\":1087:1189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1195:1375   */\n    tag_108:\n        /* \"#utility.yul\":1243:1320   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1240:1241   */\n      0x00\n        /* \"#utility.yul\":1233:1321   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x41\n        /* \"#utility.yul\":1337:1338   */\n      0x04\n        /* \"#utility.yul\":1330:1345   */\n      mstore\n        /* \"#utility.yul\":1364:1368   */\n      0x24\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1354:1369   */\n      revert\n        /* \"#utility.yul\":1381:1662   */\n    tag_109:\n        /* \"#utility.yul\":1464:1491   */\n      tag_146\n        /* \"#utility.yul\":1486:1490   */\n      dup3\n        /* \"#utility.yul\":1464:1491   */\n      tag_107\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1456:1462   */\n      dup2\n        /* \"#utility.yul\":1452:1492   */\n      add\n        /* \"#utility.yul\":1594:1600   */\n      dup2\n        /* \"#utility.yul\":1582:1592   */\n      dup2\n        /* \"#utility.yul\":1579:1601   */\n      lt\n        /* \"#utility.yul\":1558:1576   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1546:1556   */\n      dup3\n        /* \"#utility.yul\":1543:1577   */\n      gt\n        /* \"#utility.yul\":1540:1602   */\n      or\n        /* \"#utility.yul\":1537:1625   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":1605:1623   */\n      tag_148\n      tag_108\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":1537:1625   */\n    tag_147:\n        /* \"#utility.yul\":1645:1655   */\n      dup1\n        /* \"#utility.yul\":1641:1643   */\n      0x40\n        /* \"#utility.yul\":1634:1656   */\n      mstore\n        /* \"#utility.yul\":1424:1662   */\n      pop\n        /* \"#utility.yul\":1381:1662   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1668:1797   */\n    tag_110:\n        /* \"#utility.yul\":1702:1708   */\n      0x00\n        /* \"#utility.yul\":1729:1749   */\n      tag_150\n      tag_98\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1719:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1758:1791   */\n      tag_151\n        /* \"#utility.yul\":1786:1790   */\n      dup3\n        /* \"#utility.yul\":1778:1784   */\n      dup3\n        /* \"#utility.yul\":1758:1791   */\n      tag_109\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1668:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:2110   */\n    tag_111:\n        /* \"#utility.yul\":1864:1868   */\n      0x00\n        /* \"#utility.yul\":1954:1972   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1946:1952   */\n      dup3\n        /* \"#utility.yul\":1943:1973   */\n      gt\n        /* \"#utility.yul\":1940:1996   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1976:1994   */\n      tag_154\n      tag_108\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1940:1996   */\n    tag_153:\n        /* \"#utility.yul\":2014:2043   */\n      tag_155\n        /* \"#utility.yul\":2036:2042   */\n      dup3\n        /* \"#utility.yul\":2014:2043   */\n      tag_107\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2006:2043   */\n      swap1\n      pop\n        /* \"#utility.yul\":2098:2102   */\n      0x20\n        /* \"#utility.yul\":2092:2096   */\n      dup2\n        /* \"#utility.yul\":2088:2103   */\n      add\n        /* \"#utility.yul\":2080:2103   */\n      swap1\n      pop\n        /* \"#utility.yul\":1803:2110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2116:2264   */\n    tag_112:\n        /* \"#utility.yul\":2214:2220   */\n      dup3\n        /* \"#utility.yul\":2209:2212   */\n      dup2\n        /* \"#utility.yul\":2204:2207   */\n      dup4\n        /* \"#utility.yul\":2191:2221   */\n      calldatacopy\n        /* \"#utility.yul\":2255:2256   */\n      0x00\n        /* \"#utility.yul\":2246:2252   */\n      dup4\n        /* \"#utility.yul\":2241:2244   */\n      dup4\n        /* \"#utility.yul\":2237:2253   */\n      add\n        /* \"#utility.yul\":2230:2257   */\n      mstore\n        /* \"#utility.yul\":2116:2264   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2270:2693   */\n    tag_113:\n        /* \"#utility.yul\":2347:2352   */\n      0x00\n        /* \"#utility.yul\":2372:2437   */\n      tag_158\n        /* \"#utility.yul\":2388:2436   */\n      tag_159\n        /* \"#utility.yul\":2429:2435   */\n      dup5\n        /* \"#utility.yul\":2388:2436   */\n      tag_111\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2372:2437   */\n      tag_110\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2363:2437   */\n      swap1\n      pop\n        /* \"#utility.yul\":2460:2466   */\n      dup3\n        /* \"#utility.yul\":2453:2458   */\n      dup2\n        /* \"#utility.yul\":2446:2467   */\n      mstore\n        /* \"#utility.yul\":2498:2502   */\n      0x20\n        /* \"#utility.yul\":2491:2496   */\n      dup2\n        /* \"#utility.yul\":2487:2503   */\n      add\n        /* \"#utility.yul\":2536:2539   */\n      dup5\n        /* \"#utility.yul\":2527:2533   */\n      dup5\n        /* \"#utility.yul\":2522:2525   */\n      dup5\n        /* \"#utility.yul\":2518:2534   */\n      add\n        /* \"#utility.yul\":2515:2540   */\n      gt\n        /* \"#utility.yul\":2512:2624   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2543:2622   */\n      tag_161\n      tag_106\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2512:2624   */\n    tag_160:\n        /* \"#utility.yul\":2633:2687   */\n      tag_162\n        /* \"#utility.yul\":2680:2686   */\n      dup5\n        /* \"#utility.yul\":2675:2678   */\n      dup3\n        /* \"#utility.yul\":2670:2673   */\n      dup6\n        /* \"#utility.yul\":2633:2687   */\n      tag_112\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2353:2693   */\n      pop\n        /* \"#utility.yul\":2270:2693   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2712:3050   */\n    tag_114:\n        /* \"#utility.yul\":2767:2772   */\n      0x00\n        /* \"#utility.yul\":2816:2819   */\n      dup3\n        /* \"#utility.yul\":2809:2813   */\n      0x1f\n        /* \"#utility.yul\":2801:2807   */\n      dup4\n        /* \"#utility.yul\":2797:2814   */\n      add\n        /* \"#utility.yul\":2793:2820   */\n      slt\n        /* \"#utility.yul\":2783:2905   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2824:2903   */\n      tag_165\n      tag_105\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2783:2905   */\n    tag_164:\n        /* \"#utility.yul\":2941:2947   */\n      dup2\n        /* \"#utility.yul\":2928:2948   */\n      calldataload\n        /* \"#utility.yul\":2966:3044   */\n      tag_166\n        /* \"#utility.yul\":3040:3043   */\n      dup5\n        /* \"#utility.yul\":3032:3038   */\n      dup3\n        /* \"#utility.yul\":3025:3029   */\n      0x20\n        /* \"#utility.yul\":3017:3023   */\n      dup7\n        /* \"#utility.yul\":3013:3030   */\n      add\n        /* \"#utility.yul\":2966:3044   */\n      tag_113\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2957:3044   */\n      swap2\n      pop\n        /* \"#utility.yul\":2773:3050   */\n      pop\n        /* \"#utility.yul\":2712:3050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3056:3708   */\n    tag_8:\n        /* \"#utility.yul\":3133:3139   */\n      0x00\n        /* \"#utility.yul\":3141:3147   */\n      dup1\n        /* \"#utility.yul\":3190:3192   */\n      0x40\n        /* \"#utility.yul\":3178:3187   */\n      dup4\n        /* \"#utility.yul\":3169:3176   */\n      dup6\n        /* \"#utility.yul\":3165:3188   */\n      sub\n        /* \"#utility.yul\":3161:3193   */\n      slt\n        /* \"#utility.yul\":3158:3277   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":3196:3275   */\n      tag_169\n      tag_99\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3158:3277   */\n    tag_168:\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3341:3394   */\n      tag_170\n        /* \"#utility.yul\":3386:3393   */\n      dup6\n        /* \"#utility.yul\":3377:3383   */\n      dup3\n        /* \"#utility.yul\":3366:3375   */\n      dup7\n        /* \"#utility.yul\":3362:3384   */\n      add\n        /* \"#utility.yul\":3341:3394   */\n      tag_104\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3331:3394   */\n      swap3\n      pop\n        /* \"#utility.yul\":3287:3404   */\n      pop\n        /* \"#utility.yul\":3471:3473   */\n      0x20\n        /* \"#utility.yul\":3460:3469   */\n      dup4\n        /* \"#utility.yul\":3456:3474   */\n      add\n        /* \"#utility.yul\":3443:3475   */\n      calldataload\n        /* \"#utility.yul\":3502:3520   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3494:3500   */\n      dup2\n        /* \"#utility.yul\":3491:3521   */\n      gt\n        /* \"#utility.yul\":3488:3605   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":3524:3603   */\n      tag_172\n      tag_100\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3488:3605   */\n    tag_171:\n        /* \"#utility.yul\":3629:3691   */\n      tag_173\n        /* \"#utility.yul\":3683:3690   */\n      dup6\n        /* \"#utility.yul\":3674:3680   */\n      dup3\n        /* \"#utility.yul\":3663:3672   */\n      dup7\n        /* \"#utility.yul\":3659:3681   */\n      add\n        /* \"#utility.yul\":3629:3691   */\n      tag_114\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3619:3691   */\n      swap2\n      pop\n        /* \"#utility.yul\":3414:3701   */\n      pop\n        /* \"#utility.yul\":3056:3708   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3714:3791   */\n    tag_115:\n        /* \"#utility.yul\":3751:3758   */\n      0x00\n        /* \"#utility.yul\":3780:3785   */\n      dup2\n        /* \"#utility.yul\":3769:3785   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3797:3915   */\n    tag_116:\n        /* \"#utility.yul\":3884:3908   */\n      tag_176\n        /* \"#utility.yul\":3902:3907   */\n      dup2\n        /* \"#utility.yul\":3884:3908   */\n      tag_115\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":3879:3882   */\n      dup3\n        /* \"#utility.yul\":3872:3909   */\n      mstore\n        /* \"#utility.yul\":3797:3915   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3921:4143   */\n    tag_14:\n        /* \"#utility.yul\":4014:4018   */\n      0x00\n        /* \"#utility.yul\":4052:4054   */\n      0x20\n        /* \"#utility.yul\":4041:4050   */\n      dup3\n        /* \"#utility.yul\":4037:4055   */\n      add\n        /* \"#utility.yul\":4029:4055   */\n      swap1\n      pop\n        /* \"#utility.yul\":4065:4136   */\n      tag_178\n        /* \"#utility.yul\":4133:4134   */\n      0x00\n        /* \"#utility.yul\":4122:4131   */\n      dup4\n        /* \"#utility.yul\":4118:4135   */\n      add\n        /* \"#utility.yul\":4109:4115   */\n      dup5\n        /* \"#utility.yul\":4065:4136   */\n      tag_116\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":3921:4143   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4149:4248   */\n    tag_117:\n        /* \"#utility.yul\":4201:4207   */\n      0x00\n        /* \"#utility.yul\":4235:4240   */\n      dup2\n        /* \"#utility.yul\":4229:4241   */\n      mload\n        /* \"#utility.yul\":4219:4241   */\n      swap1\n      pop\n        /* \"#utility.yul\":4149:4248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4254:4423   */\n    tag_118:\n        /* \"#utility.yul\":4338:4349   */\n      0x00\n        /* \"#utility.yul\":4372:4378   */\n      dup3\n        /* \"#utility.yul\":4367:4370   */\n      dup3\n        /* \"#utility.yul\":4360:4379   */\n      mstore\n        /* \"#utility.yul\":4412:4416   */\n      0x20\n        /* \"#utility.yul\":4407:4410   */\n      dup3\n        /* \"#utility.yul\":4403:4417   */\n      add\n        /* \"#utility.yul\":4388:4417   */\n      swap1\n      pop\n        /* \"#utility.yul\":4254:4423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4429:4568   */\n    tag_119:\n        /* \"#utility.yul\":4518:4524   */\n      dup3\n        /* \"#utility.yul\":4513:4516   */\n      dup2\n        /* \"#utility.yul\":4508:4511   */\n      dup4\n        /* \"#utility.yul\":4502:4525   */\n      mcopy\n        /* \"#utility.yul\":4559:4560   */\n      0x00\n        /* \"#utility.yul\":4550:4556   */\n      dup4\n        /* \"#utility.yul\":4545:4548   */\n      dup4\n        /* \"#utility.yul\":4541:4557   */\n      add\n        /* \"#utility.yul\":4534:4561   */\n      mstore\n        /* \"#utility.yul\":4429:4568   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4574:4951   */\n    tag_120:\n        /* \"#utility.yul\":4662:4665   */\n      0x00\n        /* \"#utility.yul\":4690:4729   */\n      tag_183\n        /* \"#utility.yul\":4723:4728   */\n      dup3\n        /* \"#utility.yul\":4690:4729   */\n      tag_117\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4745:4816   */\n      tag_184\n        /* \"#utility.yul\":4809:4815   */\n      dup2\n        /* \"#utility.yul\":4804:4807   */\n      dup6\n        /* \"#utility.yul\":4745:4816   */\n      tag_118\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4738:4816   */\n      swap4\n      pop\n        /* \"#utility.yul\":4825:4890   */\n      tag_185\n        /* \"#utility.yul\":4883:4889   */\n      dup2\n        /* \"#utility.yul\":4878:4881   */\n      dup6\n        /* \"#utility.yul\":4871:4875   */\n      0x20\n        /* \"#utility.yul\":4864:4869   */\n      dup7\n        /* \"#utility.yul\":4860:4876   */\n      add\n        /* \"#utility.yul\":4825:4890   */\n      tag_119\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4915:4944   */\n      tag_186\n        /* \"#utility.yul\":4937:4943   */\n      dup2\n        /* \"#utility.yul\":4915:4944   */\n      tag_107\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4910:4913   */\n      dup5\n        /* \"#utility.yul\":4906:4945   */\n      add\n        /* \"#utility.yul\":4899:4945   */\n      swap2\n      pop\n        /* \"#utility.yul\":4666:4951   */\n      pop\n        /* \"#utility.yul\":4574:4951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4957:5270   */\n    tag_19:\n        /* \"#utility.yul\":5070:5074   */\n      0x00\n        /* \"#utility.yul\":5108:5110   */\n      0x20\n        /* \"#utility.yul\":5097:5106   */\n      dup3\n        /* \"#utility.yul\":5093:5111   */\n      add\n        /* \"#utility.yul\":5085:5111   */\n      swap1\n      pop\n        /* \"#utility.yul\":5157:5166   */\n      dup2\n        /* \"#utility.yul\":5151:5155   */\n      dup2\n        /* \"#utility.yul\":5147:5167   */\n      sub\n        /* \"#utility.yul\":5143:5144   */\n      0x00\n        /* \"#utility.yul\":5132:5141   */\n      dup4\n        /* \"#utility.yul\":5128:5145   */\n      add\n        /* \"#utility.yul\":5121:5168   */\n      mstore\n        /* \"#utility.yul\":5185:5263   */\n      tag_188\n        /* \"#utility.yul\":5258:5262   */\n      dup2\n        /* \"#utility.yul\":5249:5255   */\n      dup5\n        /* \"#utility.yul\":5185:5263   */\n      tag_120\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":5177:5263   */\n      swap1\n      pop\n        /* \"#utility.yul\":4957:5270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5276:5353   */\n    tag_121:\n        /* \"#utility.yul\":5313:5320   */\n      0x00\n        /* \"#utility.yul\":5342:5347   */\n      dup2\n        /* \"#utility.yul\":5331:5347   */\n      swap1\n      pop\n        /* \"#utility.yul\":5276:5353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5359:5477   */\n    tag_122:\n        /* \"#utility.yul\":5446:5470   */\n      tag_191\n        /* \"#utility.yul\":5464:5469   */\n      dup2\n        /* \"#utility.yul\":5446:5470   */\n      tag_121\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5441:5444   */\n      dup3\n        /* \"#utility.yul\":5434:5471   */\n      mstore\n        /* \"#utility.yul\":5359:5477   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5483:5705   */\n    tag_24:\n        /* \"#utility.yul\":5576:5580   */\n      0x00\n        /* \"#utility.yul\":5614:5616   */\n      0x20\n        /* \"#utility.yul\":5603:5612   */\n      dup3\n        /* \"#utility.yul\":5599:5617   */\n      add\n        /* \"#utility.yul\":5591:5617   */\n      swap1\n      pop\n        /* \"#utility.yul\":5627:5698   */\n      tag_193\n        /* \"#utility.yul\":5695:5696   */\n      0x00\n        /* \"#utility.yul\":5684:5693   */\n      dup4\n        /* \"#utility.yul\":5680:5697   */\n      add\n        /* \"#utility.yul\":5671:5677   */\n      dup5\n        /* \"#utility.yul\":5627:5698   */\n      tag_122\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5483:5705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5711:5833   */\n    tag_123:\n        /* \"#utility.yul\":5784:5808   */\n      tag_195\n        /* \"#utility.yul\":5802:5807   */\n      dup2\n        /* \"#utility.yul\":5784:5808   */\n      tag_115\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":5777:5782   */\n      dup2\n        /* \"#utility.yul\":5774:5809   */\n      eq\n        /* \"#utility.yul\":5764:5827   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":5823:5824   */\n      0x00\n        /* \"#utility.yul\":5820:5821   */\n      dup1\n        /* \"#utility.yul\":5813:5825   */\n      revert\n        /* \"#utility.yul\":5764:5827   */\n    tag_196:\n        /* \"#utility.yul\":5711:5833   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5839:5982   */\n    tag_124:\n        /* \"#utility.yul\":5896:5901   */\n      0x00\n        /* \"#utility.yul\":5927:5933   */\n      dup2\n        /* \"#utility.yul\":5921:5934   */\n      mload\n        /* \"#utility.yul\":5912:5934   */\n      swap1\n      pop\n        /* \"#utility.yul\":5943:5976   */\n      tag_198\n        /* \"#utility.yul\":5970:5975   */\n      dup2\n        /* \"#utility.yul\":5943:5976   */\n      tag_123\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5839:5982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5988:6339   */\n    tag_46:\n        /* \"#utility.yul\":6058:6064   */\n      0x00\n        /* \"#utility.yul\":6107:6109   */\n      0x20\n        /* \"#utility.yul\":6095:6104   */\n      dup3\n        /* \"#utility.yul\":6086:6093   */\n      dup5\n        /* \"#utility.yul\":6082:6105   */\n      sub\n        /* \"#utility.yul\":6078:6110   */\n      slt\n        /* \"#utility.yul\":6075:6194   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":6113:6192   */\n      tag_201\n      tag_99\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":6075:6194   */\n    tag_200:\n        /* \"#utility.yul\":6233:6234   */\n      0x00\n        /* \"#utility.yul\":6258:6322   */\n      tag_202\n        /* \"#utility.yul\":6314:6321   */\n      dup5\n        /* \"#utility.yul\":6305:6311   */\n      dup3\n        /* \"#utility.yul\":6294:6303   */\n      dup6\n        /* \"#utility.yul\":6290:6312   */\n      add\n        /* \"#utility.yul\":6258:6322   */\n      tag_124\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6248:6322   */\n      swap2\n      pop\n        /* \"#utility.yul\":6204:6332   */\n      pop\n        /* \"#utility.yul\":5988:6339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6345:6463   */\n    tag_125:\n        /* \"#utility.yul\":6432:6456   */\n      tag_204\n        /* \"#utility.yul\":6450:6455   */\n      dup2\n        /* \"#utility.yul\":6432:6456   */\n      tag_102\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":6427:6430   */\n      dup3\n        /* \"#utility.yul\":6420:6457   */\n      mstore\n        /* \"#utility.yul\":6345:6463   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6469:6691   */\n    tag_52:\n        /* \"#utility.yul\":6562:6566   */\n      0x00\n        /* \"#utility.yul\":6600:6602   */\n      0x20\n        /* \"#utility.yul\":6589:6598   */\n      dup3\n        /* \"#utility.yul\":6585:6603   */\n      add\n        /* \"#utility.yul\":6577:6603   */\n      swap1\n      pop\n        /* \"#utility.yul\":6613:6684   */\n      tag_206\n        /* \"#utility.yul\":6681:6682   */\n      0x00\n        /* \"#utility.yul\":6670:6679   */\n      dup4\n        /* \"#utility.yul\":6666:6683   */\n      add\n        /* \"#utility.yul\":6657:6663   */\n      dup5\n        /* \"#utility.yul\":6613:6684   */\n      tag_125\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":6469:6691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6697:6795   */\n    tag_126:\n        /* \"#utility.yul\":6748:6754   */\n      0x00\n        /* \"#utility.yul\":6782:6787   */\n      dup2\n        /* \"#utility.yul\":6776:6788   */\n      mload\n        /* \"#utility.yul\":6766:6788   */\n      swap1\n      pop\n        /* \"#utility.yul\":6697:6795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6801:6948   */\n    tag_127:\n        /* \"#utility.yul\":6902:6913   */\n      0x00\n        /* \"#utility.yul\":6939:6942   */\n      dup2\n        /* \"#utility.yul\":6924:6942   */\n      swap1\n      pop\n        /* \"#utility.yul\":6801:6948   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6954:7340   */\n    tag_128:\n        /* \"#utility.yul\":7058:7061   */\n      0x00\n        /* \"#utility.yul\":7086:7124   */\n      tag_210\n        /* \"#utility.yul\":7118:7123   */\n      dup3\n        /* \"#utility.yul\":7086:7124   */\n      tag_126\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":7140:7228   */\n      tag_211\n        /* \"#utility.yul\":7221:7227   */\n      dup2\n        /* \"#utility.yul\":7216:7219   */\n      dup6\n        /* \"#utility.yul\":7140:7228   */\n      tag_127\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":7133:7228   */\n      swap4\n      pop\n        /* \"#utility.yul\":7237:7302   */\n      tag_212\n        /* \"#utility.yul\":7295:7301   */\n      dup2\n        /* \"#utility.yul\":7290:7293   */\n      dup6\n        /* \"#utility.yul\":7283:7287   */\n      0x20\n        /* \"#utility.yul\":7276:7281   */\n      dup7\n        /* \"#utility.yul\":7272:7288   */\n      add\n        /* \"#utility.yul\":7237:7302   */\n      tag_119\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":7327:7333   */\n      dup1\n        /* \"#utility.yul\":7322:7325   */\n      dup5\n        /* \"#utility.yul\":7318:7334   */\n      add\n        /* \"#utility.yul\":7311:7334   */\n      swap2\n      pop\n        /* \"#utility.yul\":7062:7340   */\n      pop\n        /* \"#utility.yul\":6954:7340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7346:7617   */\n    tag_79:\n        /* \"#utility.yul\":7476:7479   */\n      0x00\n        /* \"#utility.yul\":7498:7591   */\n      tag_214\n        /* \"#utility.yul\":7587:7590   */\n      dup3\n        /* \"#utility.yul\":7578:7584   */\n      dup5\n        /* \"#utility.yul\":7498:7591   */\n      tag_128\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":7491:7591   */\n      swap2\n      pop\n        /* \"#utility.yul\":7608:7611   */\n      dup2\n        /* \"#utility.yul\":7601:7611   */\n      swap1\n      pop\n        /* \"#utility.yul\":7346:7617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202277ddf144113d2f0938c9eefb6fcd3d76dbc2c27984dc5f2b5bb88a7c2f50ad64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f80fd5b50608051610b0c6100685f395f818161016c015281816101c101526103730152610b0c5ff3fe60806040526004361061003e575f3560e01c80634f1ef2861461004257806352d1902d1461005e578063ad3cb1cc14610088578063f8a8fd6d146100b2575b5f80fd5b61005c600480360381019061005791906108c3565b6100dc565b005b348015610069575f80fd5b506100726100fb565b60405161007f9190610935565b60405180910390f35b348015610093575f80fd5b5061009c61012c565b6040516100a991906109ae565b60405180910390f35b3480156100bd575f80fd5b506100c6610165565b6040516100d391906109e6565b60405180910390f35b6100e461016a565b6100ed82610250565b6100f78282610253565b5050565b5f610104610371565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f5481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061021757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166101fe6103f8565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561024e576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156102bb57506040513d601f19601f820116820180604052508101906102b89190610a29565b60015b6102fc57816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102f39190610a63565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461036257806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016103599190610935565b60405180910390fd5b61036c838361044b565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146103f6576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6104247f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6104bd565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610454826104c6565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156104b0576104aa828261058f565b506104b9565b6104b861060f565b5b5050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361052157806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016105189190610a63565b60405180910390fd5b8061054d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6104bd565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516105b89190610ac0565b5f60405180830381855af49150503d805f81146105f0576040519150601f19603f3d011682016040523d82523d5f602084013e6105f5565b606091505b509150915061060585838361064b565b9250505092915050565b5f341115610649576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826106605761065b826106d8565b6106d0565b5f825114801561068657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156106c857836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016106bf9190610a63565b60405180910390fd5b8190506106d1565b5b9392505050565b5f815111156106ea5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107568261072d565b9050919050565b6107668161074c565b8114610770575f80fd5b50565b5f813590506107818161075d565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6107d58261078f565b810181811067ffffffffffffffff821117156107f4576107f361079f565b5b80604052505050565b5f61080661071c565b905061081282826107cc565b919050565b5f67ffffffffffffffff8211156108315761083061079f565b5b61083a8261078f565b9050602081019050919050565b828183375f83830152505050565b5f61086761086284610817565b6107fd565b9050828152602081018484840111156108835761088261078b565b5b61088e848285610847565b509392505050565b5f82601f8301126108aa576108a9610787565b5b81356108ba848260208601610855565b91505092915050565b5f80604083850312156108d9576108d8610725565b5b5f6108e685828601610773565b925050602083013567ffffffffffffffff81111561090757610906610729565b5b61091385828601610896565b9150509250929050565b5f819050919050565b61092f8161091d565b82525050565b5f6020820190506109485f830184610926565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6109808261094e565b61098a8185610958565b935061099a818560208601610968565b6109a38161078f565b840191505092915050565b5f6020820190508181035f8301526109c68184610976565b905092915050565b5f819050919050565b6109e0816109ce565b82525050565b5f6020820190506109f95f8301846109d7565b92915050565b610a088161091d565b8114610a12575f80fd5b50565b5f81519050610a23816109ff565b92915050565b5f60208284031215610a3e57610a3d610725565b5b5f610a4b84828501610a15565b91505092915050565b610a5d8161074c565b82525050565b5f602082019050610a765f830184610a54565b92915050565b5f81519050919050565b5f81905092915050565b5f610a9a82610a7c565b610aa48185610a86565b9350610ab4818560208601610968565b80840191505092915050565b5f610acb8284610a90565b91508190509291505056fea26469706673582212202277ddf144113d2f0938c9eefb6fcd3d76dbc2c27984dc5f2b5bb88a7c2f50ad64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0xB0C PUSH2 0x68 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x16C ADD MSTORE DUP2 DUP2 PUSH2 0x1C1 ADD MSTORE PUSH2 0x373 ADD MSTORE PUSH2 0xB0C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0xDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x16A JUMP JUMPDEST PUSH2 0xED DUP3 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xF7 DUP3 DUP3 PUSH2 0x253 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104 PUSH2 0x371 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x217 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE PUSH2 0x3F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2BB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2FC JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x362 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36C DUP4 DUP4 PUSH2 0x44B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x424 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x4BD JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x454 DUP3 PUSH2 0x4C6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x4B0 JUMPI PUSH2 0x4AA DUP3 DUP3 PUSH2 0x58F JUMP JUMPDEST POP PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x4B8 PUSH2 0x60F JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x521 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x54D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x4BD JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x605 DUP6 DUP4 DUP4 PUSH2 0x64B JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x660 JUMPI PUSH2 0x65B DUP3 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x686 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x6C8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x6D1 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x6EA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x756 DUP3 PUSH2 0x72D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x766 DUP2 PUSH2 0x74C JUMP JUMPDEST DUP2 EQ PUSH2 0x770 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x781 DUP2 PUSH2 0x75D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x7D5 DUP3 PUSH2 0x78F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7F4 JUMPI PUSH2 0x7F3 PUSH2 0x79F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x806 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP PUSH2 0x812 DUP3 DUP3 PUSH2 0x7CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x831 JUMPI PUSH2 0x830 PUSH2 0x79F JUMP JUMPDEST JUMPDEST PUSH2 0x83A DUP3 PUSH2 0x78F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x867 PUSH2 0x862 DUP5 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x883 JUMPI PUSH2 0x882 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH2 0x88E DUP5 DUP3 DUP6 PUSH2 0x847 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8AA JUMPI PUSH2 0x8A9 PUSH2 0x787 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8BA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8D8 PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8E6 DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x729 JUMP JUMPDEST JUMPDEST PUSH2 0x913 DUP6 DUP3 DUP7 ADD PUSH2 0x896 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92F DUP2 PUSH2 0x91D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x948 PUSH0 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x980 DUP3 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x98A DUP2 DUP6 PUSH2 0x958 JUMP JUMPDEST SWAP4 POP PUSH2 0x99A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x968 JUMP JUMPDEST PUSH2 0x9A3 DUP2 PUSH2 0x78F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C6 DUP2 DUP5 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E0 DUP2 PUSH2 0x9CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x9D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x91D JUMP JUMPDEST DUP2 EQ PUSH2 0xA12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA23 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4B DUP5 DUP3 DUP6 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0x74C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA76 PUSH0 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA9A DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAA4 DUP2 DUP6 PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP PUSH2 0xAB4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x968 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xACB DUP3 DUP5 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH24 0xDDF144113D2F0938C9EEFB6FCD3D76DBC2C27984DC5F2B5B 0xB8 DUP11 PUSH29 0x2F50AD64736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "144:182:7:-:0;;;1171:4:1;1128:48;;;;;;;;;144:182:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_277": {
									"entryPoint": 300,
									"id": 277,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1135": {
									"entryPoint": 592,
									"id": 1135,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkNonPayable_747": {
									"entryPoint": 1551,
									"id": 747,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_383": {
									"entryPoint": 881,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_367": {
									"entryPoint": 362,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1010": {
									"entryPoint": 1752,
									"id": 1010,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_533": {
									"entryPoint": 1222,
									"id": 533,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_434": {
									"entryPoint": 595,
									"id": 434,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionDelegateCall_930": {
									"entryPoint": 1423,
									"id": 930,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1043": {
									"entryPoint": 1213,
									"id": 1043,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_506": {
									"entryPoint": 1016,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_325": {
									"entryPoint": 251,
									"id": 325,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@test_1128": {
									"entryPoint": 357,
									"id": 1128,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_345": {
									"entryPoint": 220,
									"id": 345,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_567": {
									"entryPoint": 1099,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_970": {
									"entryPoint": 1611,
									"id": 970,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 2045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 2119,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1833,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7620:8",
										"nodeType": "YulBlock",
										"src": "0:7620:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "748:87:8",
													"nodeType": "YulBlock",
													"src": "748:87:8",
													"statements": [
														{
															"nativeSrc": "758:29:8",
															"nodeType": "YulAssignment",
															"src": "758:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nativeSrc": "767:20:8",
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:8"
																},
																"nativeSrc": "796:33:8",
																"nodeType": "YulFunctionCall",
																"src": "796:33:8"
															},
															"nativeSrc": "796:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:8",
														"nodeType": "YulTypedName",
														"src": "726:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:8",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:8",
														"nodeType": "YulTypedName",
														"src": "742:5:8",
														"type": ""
													}
												],
												"src": "696:139:8"
											},
											{
												"body": {
													"nativeSrc": "930:28:8",
													"nodeType": "YulBlock",
													"src": "930:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "947:1:8",
																		"nodeType": "YulLiteral",
																		"src": "947:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "950:1:8",
																		"nodeType": "YulLiteral",
																		"src": "950:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "940:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:8"
																},
																"nativeSrc": "940:12:8",
																"nodeType": "YulFunctionCall",
																"src": "940:12:8"
															},
															"nativeSrc": "940:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "940:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "841:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "841:117:8"
											},
											{
												"body": {
													"nativeSrc": "1053:28:8",
													"nodeType": "YulBlock",
													"src": "1053:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1070:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1070:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1073:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1073:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1063:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1063:6:8"
																},
																"nativeSrc": "1063:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1063:12:8"
															},
															"nativeSrc": "1063:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1063:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "964:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "964:117:8"
											},
											{
												"body": {
													"nativeSrc": "1135:54:8",
													"nodeType": "YulBlock",
													"src": "1135:54:8",
													"statements": [
														{
															"nativeSrc": "1145:38:8",
															"nodeType": "YulAssignment",
															"src": "1145:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1163:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1163:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1170:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1170:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1159:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1159:3:8"
																		},
																		"nativeSrc": "1159:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1159:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1179:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1179:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1175:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:8"
																		},
																		"nativeSrc": "1175:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1175:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1155:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1155:3:8"
																},
																"nativeSrc": "1155:28:8",
																"nodeType": "YulFunctionCall",
																"src": "1155:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1145:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1145:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1087:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1118:5:8",
														"nodeType": "YulTypedName",
														"src": "1118:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1128:6:8",
														"nodeType": "YulTypedName",
														"src": "1128:6:8",
														"type": ""
													}
												],
												"src": "1087:102:8"
											},
											{
												"body": {
													"nativeSrc": "1223:152:8",
													"nodeType": "YulBlock",
													"src": "1223:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1240:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1240:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1243:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1243:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1233:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1233:6:8"
																},
																"nativeSrc": "1233:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1233:88:8"
															},
															"nativeSrc": "1233:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1233:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1337:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1340:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1340:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1330:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:8"
																},
																"nativeSrc": "1330:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1330:15:8"
															},
															"nativeSrc": "1330:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1330:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1361:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1361:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1364:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1364:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1354:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:8"
																},
																"nativeSrc": "1354:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1354:15:8"
															},
															"nativeSrc": "1354:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1354:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1195:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1195:180:8"
											},
											{
												"body": {
													"nativeSrc": "1424:238:8",
													"nodeType": "YulBlock",
													"src": "1424:238:8",
													"statements": [
														{
															"nativeSrc": "1434:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1434:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1456:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1456:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1486:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1486:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1464:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "1464:21:8"
																		},
																		"nativeSrc": "1464:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1464:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1452:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1452:3:8"
																},
																"nativeSrc": "1452:40:8",
																"nodeType": "YulFunctionCall",
																"src": "1452:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1438:10:8",
																	"nodeType": "YulTypedName",
																	"src": "1438:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1603:22:8",
																"nodeType": "YulBlock",
																"src": "1603:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1605:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1605:16:8"
																			},
																			"nativeSrc": "1605:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1605:18:8"
																		},
																		"nativeSrc": "1605:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1605:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1546:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1546:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1558:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1558:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1543:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1543:2:8"
																		},
																		"nativeSrc": "1543:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1543:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1582:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1582:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1594:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1594:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1579:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1579:2:8"
																		},
																		"nativeSrc": "1579:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1579:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1540:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1540:2:8"
																},
																"nativeSrc": "1540:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1540:62:8"
															},
															"nativeSrc": "1537:88:8",
															"nodeType": "YulIf",
															"src": "1537:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1641:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1641:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1645:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1645:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:8"
																},
																"nativeSrc": "1634:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1634:22:8"
															},
															"nativeSrc": "1634:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1634:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1381:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1410:6:8",
														"nodeType": "YulTypedName",
														"src": "1410:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1418:4:8",
														"nodeType": "YulTypedName",
														"src": "1418:4:8",
														"type": ""
													}
												],
												"src": "1381:281:8"
											},
											{
												"body": {
													"nativeSrc": "1709:88:8",
													"nodeType": "YulBlock",
													"src": "1709:88:8",
													"statements": [
														{
															"nativeSrc": "1719:30:8",
															"nodeType": "YulAssignment",
															"src": "1719:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1729:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:8"
																},
																"nativeSrc": "1729:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1729:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1719:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1778:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1786:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1758:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:8"
																},
																"nativeSrc": "1758:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1758:33:8"
															},
															"nativeSrc": "1758:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1668:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1693:4:8",
														"nodeType": "YulTypedName",
														"src": "1693:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1702:6:8",
														"nodeType": "YulTypedName",
														"src": "1702:6:8",
														"type": ""
													}
												],
												"src": "1668:129:8"
											},
											{
												"body": {
													"nativeSrc": "1869:241:8",
													"nodeType": "YulBlock",
													"src": "1869:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1974:22:8",
																"nodeType": "YulBlock",
																"src": "1974:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1976:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1976:16:8"
																			},
																			"nativeSrc": "1976:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1976:18:8"
																		},
																		"nativeSrc": "1976:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1946:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1946:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1954:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1954:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1943:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1943:2:8"
																},
																"nativeSrc": "1943:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1943:30:8"
															},
															"nativeSrc": "1940:56:8",
															"nodeType": "YulIf",
															"src": "1940:56:8"
														},
														{
															"nativeSrc": "2006:37:8",
															"nodeType": "YulAssignment",
															"src": "2006:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2036:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2014:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "2014:21:8"
																},
																"nativeSrc": "2014:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2014:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2006:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2006:4:8"
																}
															]
														},
														{
															"nativeSrc": "2080:23:8",
															"nodeType": "YulAssignment",
															"src": "2080:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2092:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2092:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2098:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2098:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2088:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:8"
																},
																"nativeSrc": "2088:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2088:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2080:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2080:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "1803:307:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1853:6:8",
														"nodeType": "YulTypedName",
														"src": "1853:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1864:4:8",
														"nodeType": "YulTypedName",
														"src": "1864:4:8",
														"type": ""
													}
												],
												"src": "1803:307:8"
											},
											{
												"body": {
													"nativeSrc": "2180:84:8",
													"nodeType": "YulBlock",
													"src": "2180:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2204:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2204:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2209:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2214:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2214:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2191:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2191:12:8"
																},
																"nativeSrc": "2191:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2191:30:8"
															},
															"nativeSrc": "2191:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "2191:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2241:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2241:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2246:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2237:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:8"
																		},
																		"nativeSrc": "2237:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2237:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2255:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2255:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2230:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2230:6:8"
																},
																"nativeSrc": "2230:27:8",
																"nodeType": "YulFunctionCall",
																"src": "2230:27:8"
															},
															"nativeSrc": "2230:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "2230:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2116:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2162:3:8",
														"nodeType": "YulTypedName",
														"src": "2162:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2167:3:8",
														"nodeType": "YulTypedName",
														"src": "2167:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2172:6:8",
														"nodeType": "YulTypedName",
														"src": "2172:6:8",
														"type": ""
													}
												],
												"src": "2116:148:8"
											},
											{
												"body": {
													"nativeSrc": "2353:340:8",
													"nodeType": "YulBlock",
													"src": "2353:340:8",
													"statements": [
														{
															"nativeSrc": "2363:74:8",
															"nodeType": "YulAssignment",
															"src": "2363:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2429:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2429:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "2388:40:8",
																			"nodeType": "YulIdentifier",
																			"src": "2388:40:8"
																		},
																		"nativeSrc": "2388:48:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2388:48:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2372:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "2372:15:8"
																},
																"nativeSrc": "2372:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2372:65:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2363:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2363:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2453:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2453:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2460:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2446:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:8"
																},
																"nativeSrc": "2446:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2446:21:8"
															},
															"nativeSrc": "2446:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "2446:21:8"
														},
														{
															"nativeSrc": "2476:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2476:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2491:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2491:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2498:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2498:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2487:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:8"
																},
																"nativeSrc": "2487:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2487:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2480:3:8",
																	"nodeType": "YulTypedName",
																	"src": "2480:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2541:83:8",
																"nodeType": "YulBlock",
																"src": "2541:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2543:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2543:77:8"
																			},
																			"nativeSrc": "2543:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2543:79:8"
																		},
																		"nativeSrc": "2543:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2543:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2522:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2522:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2527:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2527:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2518:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2518:3:8"
																		},
																		"nativeSrc": "2518:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2518:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2536:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2515:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2515:2:8"
																},
																"nativeSrc": "2515:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2515:25:8"
															},
															"nativeSrc": "2512:112:8",
															"nodeType": "YulIf",
															"src": "2512:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2670:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2670:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2675:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2675:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2680:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2680:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "2633:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "2633:36:8"
																},
																"nativeSrc": "2633:54:8",
																"nodeType": "YulFunctionCall",
																"src": "2633:54:8"
															},
															"nativeSrc": "2633:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "2633:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "2270:423:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2326:3:8",
														"nodeType": "YulTypedName",
														"src": "2326:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2331:6:8",
														"nodeType": "YulTypedName",
														"src": "2331:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2339:3:8",
														"nodeType": "YulTypedName",
														"src": "2339:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2347:5:8",
														"nodeType": "YulTypedName",
														"src": "2347:5:8",
														"type": ""
													}
												],
												"src": "2270:423:8"
											},
											{
												"body": {
													"nativeSrc": "2773:277:8",
													"nodeType": "YulBlock",
													"src": "2773:277:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2822:83:8",
																"nodeType": "YulBlock",
																"src": "2822:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2824:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2824:77:8"
																			},
																			"nativeSrc": "2824:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2824:79:8"
																		},
																		"nativeSrc": "2824:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2801:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2801:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2809:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2809:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2797:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:8"
																				},
																				"nativeSrc": "2797:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2797:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2816:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2816:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2793:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:8"
																		},
																		"nativeSrc": "2793:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2786:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2786:6:8"
																},
																"nativeSrc": "2786:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2786:35:8"
															},
															"nativeSrc": "2783:122:8",
															"nodeType": "YulIf",
															"src": "2783:122:8"
														},
														{
															"nativeSrc": "2914:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2914:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2941:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2928:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2928:12:8"
																},
																"nativeSrc": "2928:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2928:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2918:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2918:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2957:87:8",
															"nodeType": "YulAssignment",
															"src": "2957:87:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3017:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3025:4:8",
																				"nodeType": "YulLiteral",
																				"src": "3025:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3013:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:8"
																		},
																		"nativeSrc": "3013:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3032:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3032:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3040:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3040:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "2966:46:8",
																	"nodeType": "YulIdentifier",
																	"src": "2966:46:8"
																},
																"nativeSrc": "2966:78:8",
																"nodeType": "YulFunctionCall",
																"src": "2966:78:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2957:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2957:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "2712:338:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2751:6:8",
														"nodeType": "YulTypedName",
														"src": "2751:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2759:3:8",
														"nodeType": "YulTypedName",
														"src": "2759:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2767:5:8",
														"nodeType": "YulTypedName",
														"src": "2767:5:8",
														"type": ""
													}
												],
												"src": "2712:338:8"
											},
											{
												"body": {
													"nativeSrc": "3148:560:8",
													"nodeType": "YulBlock",
													"src": "3148:560:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:83:8",
																"nodeType": "YulBlock",
																"src": "3194:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3196:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3196:77:8"
																			},
																			"nativeSrc": "3196:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:79:8"
																		},
																		"nativeSrc": "3196:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3169:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3169:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3178:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3165:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:8"
																		},
																		"nativeSrc": "3165:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3165:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3190:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3190:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3161:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3161:3:8"
																},
																"nativeSrc": "3161:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3161:32:8"
															},
															"nativeSrc": "3158:119:8",
															"nodeType": "YulIf",
															"src": "3158:119:8"
														},
														{
															"nativeSrc": "3287:117:8",
															"nodeType": "YulBlock",
															"src": "3287:117:8",
															"statements": [
																{
																	"nativeSrc": "3302:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3302:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3316:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3316:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3306:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3306:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3331:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3331:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3366:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3366:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3377:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3377:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3362:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3362:3:8"
																				},
																				"nativeSrc": "3362:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3362:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3386:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3386:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3341:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3341:20:8"
																		},
																		"nativeSrc": "3341:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3341:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3331:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3331:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3414:287:8",
															"nodeType": "YulBlock",
															"src": "3414:287:8",
															"statements": [
																{
																	"nativeSrc": "3429:46:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3429:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3460:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3460:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3471:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3471:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3456:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3456:3:8"
																				},
																				"nativeSrc": "3456:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3456:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3443:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "3443:12:8"
																		},
																		"nativeSrc": "3443:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3443:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3433:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3433:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3522:83:8",
																		"nodeType": "YulBlock",
																		"src": "3522:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3524:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3524:77:8"
																					},
																					"nativeSrc": "3524:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3524:79:8"
																				},
																				"nativeSrc": "3524:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3524:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3494:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3494:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3502:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3502:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3491:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3491:2:8"
																		},
																		"nativeSrc": "3491:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3491:30:8"
																	},
																	"nativeSrc": "3488:117:8",
																	"nodeType": "YulIf",
																	"src": "3488:117:8"
																},
																{
																	"nativeSrc": "3619:72:8",
																	"nodeType": "YulAssignment",
																	"src": "3619:72:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3663:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3663:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3674:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3674:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3659:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3659:3:8"
																				},
																				"nativeSrc": "3659:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3659:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3683:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3683:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "3629:29:8",
																			"nodeType": "YulIdentifier",
																			"src": "3629:29:8"
																		},
																		"nativeSrc": "3629:62:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3629:62:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3619:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3619:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3056:652:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3110:9:8",
														"nodeType": "YulTypedName",
														"src": "3110:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3121:7:8",
														"nodeType": "YulTypedName",
														"src": "3121:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3133:6:8",
														"nodeType": "YulTypedName",
														"src": "3133:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3141:6:8",
														"nodeType": "YulTypedName",
														"src": "3141:6:8",
														"type": ""
													}
												],
												"src": "3056:652:8"
											},
											{
												"body": {
													"nativeSrc": "3759:32:8",
													"nodeType": "YulBlock",
													"src": "3759:32:8",
													"statements": [
														{
															"nativeSrc": "3769:16:8",
															"nodeType": "YulAssignment",
															"src": "3769:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "3780:5:8",
																"nodeType": "YulIdentifier",
																"src": "3780:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3769:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "3769:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "3714:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3741:5:8",
														"nodeType": "YulTypedName",
														"src": "3741:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3751:7:8",
														"nodeType": "YulTypedName",
														"src": "3751:7:8",
														"type": ""
													}
												],
												"src": "3714:77:8"
											},
											{
												"body": {
													"nativeSrc": "3862:53:8",
													"nodeType": "YulBlock",
													"src": "3862:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3879:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3879:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3902:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3902:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3884:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3884:17:8"
																		},
																		"nativeSrc": "3884:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3884:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3872:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:8"
																},
																"nativeSrc": "3872:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3872:37:8"
															},
															"nativeSrc": "3872:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3872:37:8"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3797:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3850:5:8",
														"nodeType": "YulTypedName",
														"src": "3850:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3857:3:8",
														"nodeType": "YulTypedName",
														"src": "3857:3:8",
														"type": ""
													}
												],
												"src": "3797:118:8"
											},
											{
												"body": {
													"nativeSrc": "4019:124:8",
													"nodeType": "YulBlock",
													"src": "4019:124:8",
													"statements": [
														{
															"nativeSrc": "4029:26:8",
															"nodeType": "YulAssignment",
															"src": "4029:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4041:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4041:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4052:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4037:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:8"
																},
																"nativeSrc": "4037:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4037:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4029:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4029:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4109:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4109:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4122:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4133:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4133:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4118:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4118:3:8"
																		},
																		"nativeSrc": "4118:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4118:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4065:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4065:43:8"
																},
																"nativeSrc": "4065:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4065:71:8"
															},
															"nativeSrc": "4065:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "4065:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "3921:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3991:9:8",
														"nodeType": "YulTypedName",
														"src": "3991:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4003:6:8",
														"nodeType": "YulTypedName",
														"src": "4003:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4014:4:8",
														"nodeType": "YulTypedName",
														"src": "4014:4:8",
														"type": ""
													}
												],
												"src": "3921:222:8"
											},
											{
												"body": {
													"nativeSrc": "4208:40:8",
													"nodeType": "YulBlock",
													"src": "4208:40:8",
													"statements": [
														{
															"nativeSrc": "4219:22:8",
															"nodeType": "YulAssignment",
															"src": "4219:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4235:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4235:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4229:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4229:5:8"
																},
																"nativeSrc": "4229:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4229:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4219:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4219:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4149:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4191:5:8",
														"nodeType": "YulTypedName",
														"src": "4191:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4201:6:8",
														"nodeType": "YulTypedName",
														"src": "4201:6:8",
														"type": ""
													}
												],
												"src": "4149:99:8"
											},
											{
												"body": {
													"nativeSrc": "4350:73:8",
													"nodeType": "YulBlock",
													"src": "4350:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4367:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4367:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4372:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4372:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4360:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4360:6:8"
																},
																"nativeSrc": "4360:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4360:19:8"
															},
															"nativeSrc": "4360:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "4360:19:8"
														},
														{
															"nativeSrc": "4388:29:8",
															"nodeType": "YulAssignment",
															"src": "4388:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4407:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4407:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4412:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4412:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4403:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4403:3:8"
																},
																"nativeSrc": "4403:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4403:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4388:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "4388:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4254:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4322:3:8",
														"nodeType": "YulTypedName",
														"src": "4322:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4327:6:8",
														"nodeType": "YulTypedName",
														"src": "4327:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4338:11:8",
														"nodeType": "YulTypedName",
														"src": "4338:11:8",
														"type": ""
													}
												],
												"src": "4254:169:8"
											},
											{
												"body": {
													"nativeSrc": "4491:77:8",
													"nodeType": "YulBlock",
													"src": "4491:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4508:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4508:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4513:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4513:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4518:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4518:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4502:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4502:5:8"
																},
																"nativeSrc": "4502:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4502:23:8"
															},
															"nativeSrc": "4502:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "4502:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4545:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4545:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4550:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4550:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4541:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4541:3:8"
																		},
																		"nativeSrc": "4541:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4541:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4559:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4559:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4534:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:8"
																},
																"nativeSrc": "4534:27:8",
																"nodeType": "YulFunctionCall",
																"src": "4534:27:8"
															},
															"nativeSrc": "4534:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "4534:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "4429:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4473:3:8",
														"nodeType": "YulTypedName",
														"src": "4473:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4478:3:8",
														"nodeType": "YulTypedName",
														"src": "4478:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4483:6:8",
														"nodeType": "YulTypedName",
														"src": "4483:6:8",
														"type": ""
													}
												],
												"src": "4429:139:8"
											},
											{
												"body": {
													"nativeSrc": "4666:285:8",
													"nodeType": "YulBlock",
													"src": "4666:285:8",
													"statements": [
														{
															"nativeSrc": "4676:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4676:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4723:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4723:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4690:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "4690:32:8"
																},
																"nativeSrc": "4690:39:8",
																"nodeType": "YulFunctionCall",
																"src": "4690:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4680:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4680:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4738:78:8",
															"nodeType": "YulAssignment",
															"src": "4738:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4804:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4804:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4809:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4809:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4745:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "4745:58:8"
																},
																"nativeSrc": "4745:71:8",
																"nodeType": "YulFunctionCall",
																"src": "4745:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4738:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4738:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4864:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4864:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4871:4:8",
																				"nodeType": "YulLiteral",
																				"src": "4871:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4860:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4860:3:8"
																		},
																		"nativeSrc": "4860:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4860:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4878:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4878:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4883:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4825:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:34:8"
																},
																"nativeSrc": "4825:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:65:8"
															},
															"nativeSrc": "4825:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4825:65:8"
														},
														{
															"nativeSrc": "4899:46:8",
															"nodeType": "YulAssignment",
															"src": "4899:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4910:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4910:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4937:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4937:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4915:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "4915:21:8"
																		},
																		"nativeSrc": "4915:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4915:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4906:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4906:3:8"
																},
																"nativeSrc": "4906:39:8",
																"nodeType": "YulFunctionCall",
																"src": "4906:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4899:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4899:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4574:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4647:5:8",
														"nodeType": "YulTypedName",
														"src": "4647:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4654:3:8",
														"nodeType": "YulTypedName",
														"src": "4654:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4662:3:8",
														"nodeType": "YulTypedName",
														"src": "4662:3:8",
														"type": ""
													}
												],
												"src": "4574:377:8"
											},
											{
												"body": {
													"nativeSrc": "5075:195:8",
													"nodeType": "YulBlock",
													"src": "5075:195:8",
													"statements": [
														{
															"nativeSrc": "5085:26:8",
															"nodeType": "YulAssignment",
															"src": "5085:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5097:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5097:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5108:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5108:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5093:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:8"
																},
																"nativeSrc": "5093:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5093:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5085:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5085:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5132:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5132:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5143:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5143:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5128:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5128:3:8"
																		},
																		"nativeSrc": "5128:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5128:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5151:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5151:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5157:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5157:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5147:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5147:3:8"
																		},
																		"nativeSrc": "5147:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5147:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5121:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5121:6:8"
																},
																"nativeSrc": "5121:47:8",
																"nodeType": "YulFunctionCall",
																"src": "5121:47:8"
															},
															"nativeSrc": "5121:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "5121:47:8"
														},
														{
															"nativeSrc": "5177:86:8",
															"nodeType": "YulAssignment",
															"src": "5177:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5249:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5249:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5258:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5258:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5185:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "5185:63:8"
																},
																"nativeSrc": "5185:78:8",
																"nodeType": "YulFunctionCall",
																"src": "5185:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5177:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5177:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4957:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5047:9:8",
														"nodeType": "YulTypedName",
														"src": "5047:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5059:6:8",
														"nodeType": "YulTypedName",
														"src": "5059:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5070:4:8",
														"nodeType": "YulTypedName",
														"src": "5070:4:8",
														"type": ""
													}
												],
												"src": "4957:313:8"
											},
											{
												"body": {
													"nativeSrc": "5321:32:8",
													"nodeType": "YulBlock",
													"src": "5321:32:8",
													"statements": [
														{
															"nativeSrc": "5331:16:8",
															"nodeType": "YulAssignment",
															"src": "5331:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "5342:5:8",
																"nodeType": "YulIdentifier",
																"src": "5342:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5331:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5331:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5276:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5303:5:8",
														"nodeType": "YulTypedName",
														"src": "5303:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5313:7:8",
														"nodeType": "YulTypedName",
														"src": "5313:7:8",
														"type": ""
													}
												],
												"src": "5276:77:8"
											},
											{
												"body": {
													"nativeSrc": "5424:53:8",
													"nodeType": "YulBlock",
													"src": "5424:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5441:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5441:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5464:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5464:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5446:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5446:17:8"
																		},
																		"nativeSrc": "5446:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5446:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5434:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5434:6:8"
																},
																"nativeSrc": "5434:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5434:37:8"
															},
															"nativeSrc": "5434:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5434:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5359:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5412:5:8",
														"nodeType": "YulTypedName",
														"src": "5412:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5419:3:8",
														"nodeType": "YulTypedName",
														"src": "5419:3:8",
														"type": ""
													}
												],
												"src": "5359:118:8"
											},
											{
												"body": {
													"nativeSrc": "5581:124:8",
													"nodeType": "YulBlock",
													"src": "5581:124:8",
													"statements": [
														{
															"nativeSrc": "5591:26:8",
															"nodeType": "YulAssignment",
															"src": "5591:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5603:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5603:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5614:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5614:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5599:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5599:3:8"
																},
																"nativeSrc": "5599:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5599:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5591:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5591:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5671:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5671:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5684:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5684:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5695:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5695:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5680:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5680:3:8"
																		},
																		"nativeSrc": "5680:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5680:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5627:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5627:43:8"
																},
																"nativeSrc": "5627:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5627:71:8"
															},
															"nativeSrc": "5627:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5627:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5483:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5553:9:8",
														"nodeType": "YulTypedName",
														"src": "5553:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5565:6:8",
														"nodeType": "YulTypedName",
														"src": "5565:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5576:4:8",
														"nodeType": "YulTypedName",
														"src": "5576:4:8",
														"type": ""
													}
												],
												"src": "5483:222:8"
											},
											{
												"body": {
													"nativeSrc": "5754:79:8",
													"nodeType": "YulBlock",
													"src": "5754:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5811:16:8",
																"nodeType": "YulBlock",
																"src": "5811:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5820:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5820:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5823:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5823:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5813:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5813:6:8"
																			},
																			"nativeSrc": "5813:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5813:12:8"
																		},
																		"nativeSrc": "5813:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5813:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5777:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5777:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5802:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5802:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5784:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5784:17:8"
																				},
																				"nativeSrc": "5784:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5784:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5774:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5774:2:8"
																		},
																		"nativeSrc": "5774:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5767:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:8"
																},
																"nativeSrc": "5767:43:8",
																"nodeType": "YulFunctionCall",
																"src": "5767:43:8"
															},
															"nativeSrc": "5764:63:8",
															"nodeType": "YulIf",
															"src": "5764:63:8"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5711:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5747:5:8",
														"nodeType": "YulTypedName",
														"src": "5747:5:8",
														"type": ""
													}
												],
												"src": "5711:122:8"
											},
											{
												"body": {
													"nativeSrc": "5902:80:8",
													"nodeType": "YulBlock",
													"src": "5902:80:8",
													"statements": [
														{
															"nativeSrc": "5912:22:8",
															"nodeType": "YulAssignment",
															"src": "5912:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5927:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5927:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5921:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5921:5:8"
																},
																"nativeSrc": "5921:13:8",
																"nodeType": "YulFunctionCall",
																"src": "5921:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5912:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5912:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5970:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5970:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5943:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "5943:26:8"
																},
																"nativeSrc": "5943:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5943:33:8"
															},
															"nativeSrc": "5943:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5943:33:8"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "5839:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5880:6:8",
														"nodeType": "YulTypedName",
														"src": "5880:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5888:3:8",
														"nodeType": "YulTypedName",
														"src": "5888:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5896:5:8",
														"nodeType": "YulTypedName",
														"src": "5896:5:8",
														"type": ""
													}
												],
												"src": "5839:143:8"
											},
											{
												"body": {
													"nativeSrc": "6065:274:8",
													"nodeType": "YulBlock",
													"src": "6065:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6111:83:8",
																"nodeType": "YulBlock",
																"src": "6111:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6113:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6113:77:8"
																			},
																			"nativeSrc": "6113:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6113:79:8"
																		},
																		"nativeSrc": "6113:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6113:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6086:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6086:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6095:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6095:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6082:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6082:3:8"
																		},
																		"nativeSrc": "6082:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6107:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6107:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6078:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:8"
																},
																"nativeSrc": "6078:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6078:32:8"
															},
															"nativeSrc": "6075:119:8",
															"nodeType": "YulIf",
															"src": "6075:119:8"
														},
														{
															"nativeSrc": "6204:128:8",
															"nodeType": "YulBlock",
															"src": "6204:128:8",
															"statements": [
																{
																	"nativeSrc": "6219:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6219:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6233:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6233:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6223:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6223:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6248:74:8",
																	"nodeType": "YulAssignment",
																	"src": "6248:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6294:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6294:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6305:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6305:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6290:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6290:3:8"
																				},
																				"nativeSrc": "6290:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6290:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6314:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6314:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "6258:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "6258:31:8"
																		},
																		"nativeSrc": "6258:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6248:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6248:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "5988:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6035:9:8",
														"nodeType": "YulTypedName",
														"src": "6035:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6046:7:8",
														"nodeType": "YulTypedName",
														"src": "6046:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6058:6:8",
														"nodeType": "YulTypedName",
														"src": "6058:6:8",
														"type": ""
													}
												],
												"src": "5988:351:8"
											},
											{
												"body": {
													"nativeSrc": "6410:53:8",
													"nodeType": "YulBlock",
													"src": "6410:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6427:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6427:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6450:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6450:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6432:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6432:17:8"
																		},
																		"nativeSrc": "6432:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6432:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6420:6:8"
																},
																"nativeSrc": "6420:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6420:37:8"
															},
															"nativeSrc": "6420:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6420:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6345:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6398:5:8",
														"nodeType": "YulTypedName",
														"src": "6398:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6405:3:8",
														"nodeType": "YulTypedName",
														"src": "6405:3:8",
														"type": ""
													}
												],
												"src": "6345:118:8"
											},
											{
												"body": {
													"nativeSrc": "6567:124:8",
													"nodeType": "YulBlock",
													"src": "6567:124:8",
													"statements": [
														{
															"nativeSrc": "6577:26:8",
															"nodeType": "YulAssignment",
															"src": "6577:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6589:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6589:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6600:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6600:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6585:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:8"
																},
																"nativeSrc": "6585:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6585:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6577:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6577:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6657:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6657:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6670:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6670:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6681:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6681:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6666:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6666:3:8"
																		},
																		"nativeSrc": "6666:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6666:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6613:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6613:43:8"
																},
																"nativeSrc": "6613:71:8",
																"nodeType": "YulFunctionCall",
																"src": "6613:71:8"
															},
															"nativeSrc": "6613:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "6613:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6469:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6539:9:8",
														"nodeType": "YulTypedName",
														"src": "6539:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6551:6:8",
														"nodeType": "YulTypedName",
														"src": "6551:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6562:4:8",
														"nodeType": "YulTypedName",
														"src": "6562:4:8",
														"type": ""
													}
												],
												"src": "6469:222:8"
											},
											{
												"body": {
													"nativeSrc": "6755:40:8",
													"nodeType": "YulBlock",
													"src": "6755:40:8",
													"statements": [
														{
															"nativeSrc": "6766:22:8",
															"nodeType": "YulAssignment",
															"src": "6766:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6782:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6782:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6776:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6776:5:8"
																},
																"nativeSrc": "6776:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6776:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6766:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6766:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "6697:98:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6738:5:8",
														"nodeType": "YulTypedName",
														"src": "6738:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6748:6:8",
														"nodeType": "YulTypedName",
														"src": "6748:6:8",
														"type": ""
													}
												],
												"src": "6697:98:8"
											},
											{
												"body": {
													"nativeSrc": "6914:34:8",
													"nodeType": "YulBlock",
													"src": "6914:34:8",
													"statements": [
														{
															"nativeSrc": "6924:18:8",
															"nodeType": "YulAssignment",
															"src": "6924:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "6939:3:8",
																"nodeType": "YulIdentifier",
																"src": "6939:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6924:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "6924:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6801:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6886:3:8",
														"nodeType": "YulTypedName",
														"src": "6886:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6891:6:8",
														"nodeType": "YulTypedName",
														"src": "6891:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6902:11:8",
														"nodeType": "YulTypedName",
														"src": "6902:11:8",
														"type": ""
													}
												],
												"src": "6801:147:8"
											},
											{
												"body": {
													"nativeSrc": "7062:278:8",
													"nodeType": "YulBlock",
													"src": "7062:278:8",
													"statements": [
														{
															"nativeSrc": "7072:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7072:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7118:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7118:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "7086:31:8",
																	"nodeType": "YulIdentifier",
																	"src": "7086:31:8"
																},
																"nativeSrc": "7086:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7086:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7076:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7076:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7133:95:8",
															"nodeType": "YulAssignment",
															"src": "7133:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7216:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7216:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7221:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7221:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7140:75:8",
																	"nodeType": "YulIdentifier",
																	"src": "7140:75:8"
																},
																"nativeSrc": "7140:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7140:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7133:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7133:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7276:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7276:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7283:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7283:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7272:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:8"
																		},
																		"nativeSrc": "7272:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7290:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7290:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7295:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7295:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7237:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "7237:34:8"
																},
																"nativeSrc": "7237:65:8",
																"nodeType": "YulFunctionCall",
																"src": "7237:65:8"
															},
															"nativeSrc": "7237:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "7237:65:8"
														},
														{
															"nativeSrc": "7311:23:8",
															"nodeType": "YulAssignment",
															"src": "7311:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7322:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7322:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7327:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7327:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7318:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7318:3:8"
																},
																"nativeSrc": "7318:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7318:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7311:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7311:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6954:386:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7043:5:8",
														"nodeType": "YulTypedName",
														"src": "7043:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7050:3:8",
														"nodeType": "YulTypedName",
														"src": "7050:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7058:3:8",
														"nodeType": "YulTypedName",
														"src": "7058:3:8",
														"type": ""
													}
												],
												"src": "6954:386:8"
											},
											{
												"body": {
													"nativeSrc": "7480:137:8",
													"nodeType": "YulBlock",
													"src": "7480:137:8",
													"statements": [
														{
															"nativeSrc": "7491:100:8",
															"nodeType": "YulAssignment",
															"src": "7491:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7578:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7578:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7587:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7587:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7498:79:8",
																	"nodeType": "YulIdentifier",
																	"src": "7498:79:8"
																},
																"nativeSrc": "7498:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7498:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7491:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7491:3:8"
																}
															]
														},
														{
															"nativeSrc": "7601:10:8",
															"nodeType": "YulAssignment",
															"src": "7601:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "7608:3:8",
																"nodeType": "YulIdentifier",
																"src": "7608:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7601:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7346:271:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7459:3:8",
														"nodeType": "YulTypedName",
														"src": "7459:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7465:6:8",
														"nodeType": "YulTypedName",
														"src": "7465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7476:3:8",
														"nodeType": "YulTypedName",
														"src": "7476:3:8",
														"type": ""
													}
												],
												"src": "7346:271:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"273": [
									{
										"length": 32,
										"start": 364
									},
									{
										"length": 32,
										"start": 449
									},
									{
										"length": 32,
										"start": 883
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061003e575f3560e01c80634f1ef2861461004257806352d1902d1461005e578063ad3cb1cc14610088578063f8a8fd6d146100b2575b5f80fd5b61005c600480360381019061005791906108c3565b6100dc565b005b348015610069575f80fd5b506100726100fb565b60405161007f9190610935565b60405180910390f35b348015610093575f80fd5b5061009c61012c565b6040516100a991906109ae565b60405180910390f35b3480156100bd575f80fd5b506100c6610165565b6040516100d391906109e6565b60405180910390f35b6100e461016a565b6100ed82610250565b6100f78282610253565b5050565b5f610104610371565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f5481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061021757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166101fe6103f8565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561024e576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156102bb57506040513d601f19601f820116820180604052508101906102b89190610a29565b60015b6102fc57816040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016102f39190610a63565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b811461036257806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016103599190610935565b60405180910390fd5b61036c838361044b565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16146103f6576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6104247f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6104bd565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610454826104c6565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f815111156104b0576104aa828261058f565b506104b9565b6104b861060f565b5b5050565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361052157806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016105189190610a63565b60405180910390fd5b8061054d7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6104bd565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516105b89190610ac0565b5f60405180830381855af49150503d805f81146105f0576040519150601f19603f3d011682016040523d82523d5f602084013e6105f5565b606091505b509150915061060585838361064b565b9250505092915050565b5f341115610649576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6060826106605761065b826106d8565b6106d0565b5f825114801561068657505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156106c857836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016106bf9190610a63565b60405180910390fd5b8190506106d1565b5b9392505050565b5f815111156106ea5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107568261072d565b9050919050565b6107668161074c565b8114610770575f80fd5b50565b5f813590506107818161075d565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6107d58261078f565b810181811067ffffffffffffffff821117156107f4576107f361079f565b5b80604052505050565b5f61080661071c565b905061081282826107cc565b919050565b5f67ffffffffffffffff8211156108315761083061079f565b5b61083a8261078f565b9050602081019050919050565b828183375f83830152505050565b5f61086761086284610817565b6107fd565b9050828152602081018484840111156108835761088261078b565b5b61088e848285610847565b509392505050565b5f82601f8301126108aa576108a9610787565b5b81356108ba848260208601610855565b91505092915050565b5f80604083850312156108d9576108d8610725565b5b5f6108e685828601610773565b925050602083013567ffffffffffffffff81111561090757610906610729565b5b61091385828601610896565b9150509250929050565b5f819050919050565b61092f8161091d565b82525050565b5f6020820190506109485f830184610926565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f6109808261094e565b61098a8185610958565b935061099a818560208601610968565b6109a38161078f565b840191505092915050565b5f6020820190508181035f8301526109c68184610976565b905092915050565b5f819050919050565b6109e0816109ce565b82525050565b5f6020820190506109f95f8301846109d7565b92915050565b610a088161091d565b8114610a12575f80fd5b50565b5f81519050610a23816109ff565b92915050565b5f60208284031215610a3e57610a3d610725565b5b5f610a4b84828501610a15565b91505092915050565b610a5d8161074c565b82525050565b5f602082019050610a765f830184610a54565b92915050565b5f81519050919050565b5f81905092915050565b5f610a9a82610a7c565b610aa48185610a86565b9350610ab4818560208601610968565b80840191505092915050565b5f610acb8284610a90565b91508190509291505056fea26469706673582212202277ddf144113d2f0938c9eefb6fcd3d76dbc2c27984dc5f2b5bb88a7c2f50ad64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH2 0xDC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x72 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x12C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC6 PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x9E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE4 PUSH2 0x16A JUMP JUMPDEST PUSH2 0xED DUP3 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xF7 DUP3 DUP3 PUSH2 0x253 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104 PUSH2 0x371 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x217 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1FE PUSH2 0x3F8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x24E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2BB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0xA29 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2FC JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x362 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x36C DUP4 DUP4 PUSH2 0x44B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x424 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x4BD JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x454 DUP3 PUSH2 0x4C6 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x4B0 JUMPI PUSH2 0x4AA DUP3 DUP3 PUSH2 0x58F JUMP JUMPDEST POP PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x4B8 PUSH2 0x60F JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x521 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x518 SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x54D PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x4BD JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x5B8 SWAP2 SWAP1 PUSH2 0xAC0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x5F0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x5F5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x605 DUP6 DUP4 DUP4 PUSH2 0x64B JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x660 JUMPI PUSH2 0x65B DUP3 PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x686 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x6C8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x6D1 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x6EA JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x756 DUP3 PUSH2 0x72D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x766 DUP2 PUSH2 0x74C JUMP JUMPDEST DUP2 EQ PUSH2 0x770 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x781 DUP2 PUSH2 0x75D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x7D5 DUP3 PUSH2 0x78F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7F4 JUMPI PUSH2 0x7F3 PUSH2 0x79F JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x806 PUSH2 0x71C JUMP JUMPDEST SWAP1 POP PUSH2 0x812 DUP3 DUP3 PUSH2 0x7CC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x831 JUMPI PUSH2 0x830 PUSH2 0x79F JUMP JUMPDEST JUMPDEST PUSH2 0x83A DUP3 PUSH2 0x78F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x867 PUSH2 0x862 DUP5 PUSH2 0x817 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x883 JUMPI PUSH2 0x882 PUSH2 0x78B JUMP JUMPDEST JUMPDEST PUSH2 0x88E DUP5 DUP3 DUP6 PUSH2 0x847 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8AA JUMPI PUSH2 0x8A9 PUSH2 0x787 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8BA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x855 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8D9 JUMPI PUSH2 0x8D8 PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8E6 DUP6 DUP3 DUP7 ADD PUSH2 0x773 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x907 JUMPI PUSH2 0x906 PUSH2 0x729 JUMP JUMPDEST JUMPDEST PUSH2 0x913 DUP6 DUP3 DUP7 ADD PUSH2 0x896 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x92F DUP2 PUSH2 0x91D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x948 PUSH0 DUP4 ADD DUP5 PUSH2 0x926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x980 DUP3 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x98A DUP2 DUP6 PUSH2 0x958 JUMP JUMPDEST SWAP4 POP PUSH2 0x99A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x968 JUMP JUMPDEST PUSH2 0x9A3 DUP2 PUSH2 0x78F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C6 DUP2 DUP5 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E0 DUP2 PUSH2 0x9CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x9D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA08 DUP2 PUSH2 0x91D JUMP JUMPDEST DUP2 EQ PUSH2 0xA12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA23 DUP2 PUSH2 0x9FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI PUSH2 0xA3D PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA4B DUP5 DUP3 DUP6 ADD PUSH2 0xA15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5D DUP2 PUSH2 0x74C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA76 PUSH0 DUP4 ADD DUP5 PUSH2 0xA54 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA9A DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAA4 DUP2 DUP6 PUSH2 0xA86 JUMP JUMPDEST SWAP4 POP PUSH2 0xAB4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x968 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xACB DUP3 DUP5 PUSH2 0xA90 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 PUSH24 0xDDF144113D2F0938C9EEFB6FCD3D76DBC2C27984DC5F2B5B 0xB8 DUP11 PUSH29 0x2F50AD64736F6C634300081A0033000000000000000000000000000000 ",
							"sourceMap": "144:182:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4158:214:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;216:19:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4158:214:1;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;1327:66:3::1;3800:32:1;;3793:39;;3705:134:::0;:::o;1819:58::-;;;;;;;;;;;;;;;;;;;:::o;216:19:7:-;;;;:::o;4599:312:1:-;4688:6;4671:23;;4679:4;4671:23;;;:120;;;;4785:6;4749:42;;:32;:30;:32::i;:::-;:42;;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;4654:251;4599:312::o;242:82:7:-;;:::o;6052:538:1:-;6169:17;6151:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6147:437;;6555:17;6513:60;;;;;;;;;;;:::i;:::-;;;;;;;;6147:437;1327:66:3;6253:32:1;;6245:4;:40;6241:120;;6341:4;6312:34;;;;;;;;;;;:::i;:::-;;;;;;;;6241:120;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5111:6;5094:23;;5102:4;5094:23;;;5090:145;;5195:29;;;;;;;;;;;;;;5090:145;5028:213::o;1957:138:3:-;2009:7;2035:47;1327:66;2062:19;;2035:26;:47::i;:::-;:53;;;;;;;;;;;;2028:60;;1957:138;:::o;2779:335::-;2870:37;2889:17;2870:18;:37::i;:::-;2931:17;2922:27;;;;;;;;;;;;2978:1;2964:4;:11;:15;2960:148;;;2995:53;3024:17;3043:4;2995:28;:53::i;:::-;;2960:148;;;3079:18;:16;:18::i;:::-;2960:148;2779:335;;:::o;1684:190:6:-;1745:21;1854:4;1844:14;;1684:190;;;:::o;2186:281:3:-;2296:1;2263:17;:29;;;:34;2259:119;;2349:17;2320:47;;;;;;;;;;;:::i;:::-;;;;;;;;2259:119;2443:17;2387:47;1327:66;2414:19;;2387:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;2186:281;:::o;4106:253:5:-;4189:12;4214;4228:23;4255:6;:19;;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;;;;4106:253;;;;:::o;6598:122:3:-;6660:1;6648:9;:13;6644:70;;;6684:19;;;;;;;;;;;;;;6644:70;6598:122::o;4625:582:5:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:75:8;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;950:1;947;940:12;964:117;1073:1;1070;1063:12;1087:102;1128:6;1179:2;1175:7;1170:2;1163:5;1159:14;1155:28;1145:38;;1087:102;;;:::o;1195:180::-;1243:77;1240:1;1233:88;1340:4;1337:1;1330:15;1364:4;1361:1;1354:15;1381:281;1464:27;1486:4;1464:27;:::i;:::-;1456:6;1452:40;1594:6;1582:10;1579:22;1558:18;1546:10;1543:34;1540:62;1537:88;;;1605:18;;:::i;:::-;1537:88;1645:10;1641:2;1634:22;1424:238;1381:281;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:307::-;1864:4;1954:18;1946:6;1943:30;1940:56;;;1976:18;;:::i;:::-;1940:56;2014:29;2036:6;2014:29;:::i;:::-;2006:37;;2098:4;2092;2088:15;2080:23;;1803:307;;;:::o;2116:148::-;2214:6;2209:3;2204;2191:30;2255:1;2246:6;2241:3;2237:16;2230:27;2116:148;;;:::o;2270:423::-;2347:5;2372:65;2388:48;2429:6;2388:48;:::i;:::-;2372:65;:::i;:::-;2363:74;;2460:6;2453:5;2446:21;2498:4;2491:5;2487:16;2536:3;2527:6;2522:3;2518:16;2515:25;2512:112;;;2543:79;;:::i;:::-;2512:112;2633:54;2680:6;2675:3;2670;2633:54;:::i;:::-;2353:340;2270:423;;;;;:::o;2712:338::-;2767:5;2816:3;2809:4;2801:6;2797:17;2793:27;2783:122;;2824:79;;:::i;:::-;2783:122;2941:6;2928:20;2966:78;3040:3;3032:6;3025:4;3017:6;3013:17;2966:78;:::i;:::-;2957:87;;2773:277;2712:338;;;;:::o;3056:652::-;3133:6;3141;3190:2;3178:9;3169:7;3165:23;3161:32;3158:119;;;3196:79;;:::i;:::-;3158:119;3316:1;3341:53;3386:7;3377:6;3366:9;3362:22;3341:53;:::i;:::-;3331:63;;3287:117;3471:2;3460:9;3456:18;3443:32;3502:18;3494:6;3491:30;3488:117;;;3524:79;;:::i;:::-;3488:117;3629:62;3683:7;3674:6;3663:9;3659:22;3629:62;:::i;:::-;3619:72;;3414:287;3056:652;;;;;:::o;3714:77::-;3751:7;3780:5;3769:16;;3714:77;;;:::o;3797:118::-;3884:24;3902:5;3884:24;:::i;:::-;3879:3;3872:37;3797:118;;:::o;3921:222::-;4014:4;4052:2;4041:9;4037:18;4029:26;;4065:71;4133:1;4122:9;4118:17;4109:6;4065:71;:::i;:::-;3921:222;;;;:::o;4149:99::-;4201:6;4235:5;4229:12;4219:22;;4149:99;;;:::o;4254:169::-;4338:11;4372:6;4367:3;4360:19;4412:4;4407:3;4403:14;4388:29;;4254:169;;;;:::o;4429:139::-;4518:6;4513:3;4508;4502:23;4559:1;4550:6;4545:3;4541:16;4534:27;4429:139;;;:::o;4574:377::-;4662:3;4690:39;4723:5;4690:39;:::i;:::-;4745:71;4809:6;4804:3;4745:71;:::i;:::-;4738:78;;4825:65;4883:6;4878:3;4871:4;4864:5;4860:16;4825:65;:::i;:::-;4915:29;4937:6;4915:29;:::i;:::-;4910:3;4906:39;4899:46;;4666:285;4574:377;;;;:::o;4957:313::-;5070:4;5108:2;5097:9;5093:18;5085:26;;5157:9;5151:4;5147:20;5143:1;5132:9;5128:17;5121:47;5185:78;5258:4;5249:6;5185:78;:::i;:::-;5177:86;;4957:313;;;;:::o;5276:77::-;5313:7;5342:5;5331:16;;5276:77;;;:::o;5359:118::-;5446:24;5464:5;5446:24;:::i;:::-;5441:3;5434:37;5359:118;;:::o;5483:222::-;5576:4;5614:2;5603:9;5599:18;5591:26;;5627:71;5695:1;5684:9;5680:17;5671:6;5627:71;:::i;:::-;5483:222;;;;:::o;5711:122::-;5784:24;5802:5;5784:24;:::i;:::-;5777:5;5774:35;5764:63;;5823:1;5820;5813:12;5764:63;5711:122;:::o;5839:143::-;5896:5;5927:6;5921:13;5912:22;;5943:33;5970:5;5943:33;:::i;:::-;5839:143;;;;:::o;5988:351::-;6058:6;6107:2;6095:9;6086:7;6082:23;6078:32;6075:119;;;6113:79;;:::i;:::-;6075:119;6233:1;6258:64;6314:7;6305:6;6294:9;6290:22;6258:64;:::i;:::-;6248:74;;6204:128;5988:351;;;;:::o;6345:118::-;6432:24;6450:5;6432:24;:::i;:::-;6427:3;6420:37;6345:118;;:::o;6469:222::-;6562:4;6600:2;6589:9;6585:18;6577:26;;6613:71;6681:1;6670:9;6666:17;6657:6;6613:71;:::i;:::-;6469:222;;;;:::o;6697:98::-;6748:6;6782:5;6776:12;6766:22;;6697:98;;;:::o;6801:147::-;6902:11;6939:3;6924:18;;6801:147;;;;:::o;6954:386::-;7058:3;7086:38;7118:5;7086:38;:::i;:::-;7140:88;7221:6;7216:3;7140:88;:::i;:::-;7133:95;;7237:65;7295:6;7290:3;7283:4;7276:5;7272:16;7237:65;:::i;:::-;7327:6;7322:3;7318:16;7311:23;;7062:278;6954:386;;;;:::o;7346:271::-;7476:3;7498:93;7587:3;7578:6;7498:93;:::i;:::-;7491:100;;7608:3;7601:10;;7346:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "565600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"proxiableUUID()": "infinite",
								"test()": "2468",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "11"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 144,
									"end": 326,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "ASSIGNIMMUTABLE",
									"source": 7,
									"value": "273"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 326,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202277ddf144113d2f0938c9eefb6fcd3d76dbc2c27984dc5f2b5bb88a7c2f50ad64736f6c634300081a0033",
									".code": [
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "4F1EF286"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "52D1902D"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "AD3CB1CC"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "F8A8FD6D"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 144,
											"end": 326,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 216,
											"end": 235,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 216,
											"end": 235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 216,
											"end": 235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3832,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 216,
											"end": 235,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 235,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 216,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4749,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 242,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 242,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 242,
											"end": 324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 242,
											"end": 324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6555,
											"end": 6572,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 1,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6513,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6285,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6245,
											"end": 6249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 1,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6312,
											"end": 6346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5028,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2016,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2081,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2035,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2035,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1957,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 3114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1874,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1684,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2349,
											"end": 2366,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2320,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2443,
											"end": 2460,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1327,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2433,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2387,
											"end": 2434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2387,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2440,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 3,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6598,
											"end": 6720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 958,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 841,
											"end": 958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 950,
											"end": 951,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 948,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 940,
											"end": 952,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 964,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1181,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1170,
											"end": 1172,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1163,
											"end": 1168,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1183,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1145,
											"end": 1183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1195,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1243,
											"end": 1320,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1241,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1233,
											"end": 1321,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1330,
											"end": 1345,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1368,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1369,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1464,
											"end": 1491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1464,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1492,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1600,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1582,
											"end": 1592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1579,
											"end": 1601,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1543,
											"end": 1577,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1602,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1605,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1605,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1537,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1641,
											"end": 1643,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1381,
											"end": 1662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1729,
											"end": 1749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1729,
											"end": 1749,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1749,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1786,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1758,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1758,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1864,
											"end": 1868,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1972,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1946,
											"end": 1952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1973,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 1976,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1940,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 2014,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2014,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2006,
											"end": 2043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2098,
											"end": 2102,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2088,
											"end": 2103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 2110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2204,
											"end": 2207,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2191,
											"end": 2221,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2252,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2244,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2237,
											"end": 2253,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2230,
											"end": 2257,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2116,
											"end": 2264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2388,
											"end": 2436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 2388,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2372,
											"end": 2437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2363,
											"end": 2437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2363,
											"end": 2437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2453,
											"end": 2458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2467,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2522,
											"end": 2525,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2534,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2515,
											"end": 2540,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 2543,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 2512,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2678,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2670,
											"end": 2673,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 2633,
											"end": 2687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 2633,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2270,
											"end": 2693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2797,
											"end": 2814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2793,
											"end": 2820,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 2824,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 2824,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 2783,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2928,
											"end": 2948,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3025,
											"end": 3029,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3017,
											"end": 3023,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3030,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 2966,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 2966,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3044,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 3044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 3050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3050,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 3050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3190,
											"end": 3192,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3187,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3169,
											"end": 3176,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3188,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3193,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 3196,
											"end": 3275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 3196,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 3158,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3386,
											"end": 3393,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3366,
											"end": 3375,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3341,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 3341,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3394,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 3404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3471,
											"end": 3473,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3469,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3443,
											"end": 3475,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3494,
											"end": 3500,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3491,
											"end": 3521,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3524,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 3524,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 3488,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 3683,
											"end": 3690,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3663,
											"end": 3672,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 3629,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 3629,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3708,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3056,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3751,
											"end": 3758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3785,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3769,
											"end": 3785,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3902,
											"end": 3907,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 3884,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 3884,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3879,
											"end": 3882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3872,
											"end": 3909,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3797,
											"end": 3915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4054,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4037,
											"end": 4055,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4029,
											"end": 4055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4109,
											"end": 4115,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 4065,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 4065,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4143,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3921,
											"end": 4143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4248,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4149,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4235,
											"end": 4240,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4229,
											"end": 4241,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4219,
											"end": 4241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4248,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4149,
											"end": 4248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4423,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4254,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4367,
											"end": 4370,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4360,
											"end": 4379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4412,
											"end": 4416,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4407,
											"end": 4410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4388,
											"end": 4417,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4388,
											"end": 4417,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4423,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4423,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4254,
											"end": 4423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4568,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4429,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4524,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4516,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4508,
											"end": 4511,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4502,
											"end": 4525,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4550,
											"end": 4556,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4548,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4541,
											"end": 4557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4534,
											"end": 4561,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4429,
											"end": 4568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4951,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 4574,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4662,
											"end": 4665,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4723,
											"end": 4728,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 4690,
											"end": 4729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4729,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 4690,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 4809,
											"end": 4815,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4804,
											"end": 4807,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 4745,
											"end": 4816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4816,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4738,
											"end": 4816,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4878,
											"end": 4881,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4871,
											"end": 4875,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 4869,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 4825,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4890,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 4825,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4937,
											"end": 4943,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4915,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4910,
											"end": 4913,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 4945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 4945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4899,
											"end": 4945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4951,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5270,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 4957,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5070,
											"end": 5074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5166,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5147,
											"end": 5167,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5141,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5128,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5168,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5258,
											"end": 5262,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5249,
											"end": 5255,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 5185,
											"end": 5263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5185,
											"end": 5263,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 5185,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5263,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5177,
											"end": 5263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5270,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 5270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5353,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 5276,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5342,
											"end": 5347,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5347,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5347,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5276,
											"end": 5353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5477,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5359,
											"end": 5477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5464,
											"end": 5469,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 5446,
											"end": 5470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5446,
											"end": 5470,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 5446,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5441,
											"end": 5444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5434,
											"end": 5471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5359,
											"end": 5477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5705,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5483,
											"end": 5705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5576,
											"end": 5580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5616,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5591,
											"end": 5617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5693,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5680,
											"end": 5697,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5671,
											"end": 5677,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 5627,
											"end": 5698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5627,
											"end": 5698,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5627,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5705,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5483,
											"end": 5705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5833,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5711,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5802,
											"end": 5807,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5784,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5784,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5777,
											"end": 5782,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 5809,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5823,
											"end": 5824,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5821,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5813,
											"end": 5825,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5982,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 5839,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 5901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5933,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5921,
											"end": 5934,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 5934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5912,
											"end": 5934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5970,
											"end": 5975,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 5943,
											"end": 5976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5943,
											"end": 5976,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5943,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5982,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5839,
											"end": 5982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6339,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 5988,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6058,
											"end": 6064,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6107,
											"end": 6109,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6095,
											"end": 6104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6086,
											"end": 6093,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6105,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6078,
											"end": 6110,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 6113,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 6113,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 6075,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6314,
											"end": 6321,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6305,
											"end": 6311,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6294,
											"end": 6303,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6258,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 6258,
											"end": 6322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6258,
											"end": 6322,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 6258,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6322,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6322,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6339,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5988,
											"end": 6339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6463,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6345,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 6450,
											"end": 6455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 6432,
											"end": 6456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 6432,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6427,
											"end": 6430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6420,
											"end": 6457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6345,
											"end": 6463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6691,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 6469,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6600,
											"end": 6602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6589,
											"end": 6598,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6577,
											"end": 6603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6613,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6681,
											"end": 6682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6683,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6657,
											"end": 6663,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6613,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 6613,
											"end": 6684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6613,
											"end": 6684,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6613,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6691,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6691,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6691,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6469,
											"end": 6691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6795,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 6697,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6748,
											"end": 6754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6776,
											"end": 6788,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6766,
											"end": 6788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6766,
											"end": 6788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6697,
											"end": 6795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6948,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 6801,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6902,
											"end": 6913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6948,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6948,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6801,
											"end": 6948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6954,
											"end": 7340,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 6954,
											"end": 7340,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7058,
											"end": 7061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 7118,
											"end": 7123,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 7086,
											"end": 7124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 7086,
											"end": 7124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7140,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 7221,
											"end": 7227,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7216,
											"end": 7219,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7140,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 7140,
											"end": 7228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7140,
											"end": 7228,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 7140,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7133,
											"end": 7228,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7133,
											"end": 7228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7237,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 7295,
											"end": 7301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7293,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7283,
											"end": 7287,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7281,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7288,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7237,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 7237,
											"end": 7302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7237,
											"end": 7302,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 7237,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7322,
											"end": 7325,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7318,
											"end": 7334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6954,
											"end": 7340,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6954,
											"end": 7340,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6954,
											"end": 7340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6954,
											"end": 7340,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6954,
											"end": 7340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7617,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 7346,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7476,
											"end": 7479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 7587,
											"end": 7590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7584,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7498,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 7498,
											"end": 7591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7498,
											"end": 7591,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 7498,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7491,
											"end": 7591,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7491,
											"end": 7591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7608,
											"end": 7611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7611,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7601,
											"end": 7611,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7617,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7617,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"test()": "f8a8fd6d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":\"DataLiquidityPoolImplementationV3Mock\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol\":{\"keccak256\":\"0xfc4e5555f73fed649b35dc97337d70e007a862bc3522edc00a468068626053a0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7b1dc4acff13ce923c9bf3d543e169cc2ba35b8bdb526a5747e2bff417af0bca\",\"dweb:/ipfs/QmQkJygupYgfABiAMUcDnqg5FSWhLeQKt7RLDqYdEb1wtb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1128,
								"contract": "contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol:DataLiquidityPoolImplementationV3Mock",
								"label": "test",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							253
						]
					},
					"id": 254,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2367:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2813:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2685:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3098:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:0"
									},
									"src": "3285:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3389:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:0"
									},
									"src": "3383:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3514:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3526:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:0"
									},
									"src": "3508:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4092:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4158:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4158:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4158:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4191:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4302:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4302:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4327:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4348:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4348:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4706:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4726:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4746:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4770:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4790:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4856:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4873:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4851:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4887:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4908:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4901:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4951:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "4951:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "4983:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "4979:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "4999:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5013:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5066:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5086:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5100:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5100:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5142:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5137:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4078:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:0"
									},
									"src": "4069:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6291:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6357:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6357:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6357:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6390:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6431:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6431:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6450:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6427:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6477:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6498:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6491:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6541:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6541:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6558:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6575:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6618:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6668:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6656:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6651:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6261:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6275:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:0"
									},
									"src": "6252:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6921:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "6931:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:0"
									},
									"src": "6893:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7136:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7151:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7146:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7170:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7191:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7184:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:0"
									},
									"scope": 253,
									"src": "7084:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7760:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7826:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7826:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7826:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7859:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7900:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7900:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7896:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7917:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "7938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "7931:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "7985:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "7985:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "7981:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8021:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8035:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8035:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8087:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8082:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:0"
									},
									"scope": 253,
									"src": "7711:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8308:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8325:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8325:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8318:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8300:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:0"
									},
									"scope": 253,
									"src": "8243:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8543:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8560:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8560:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8553:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8537:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:0"
									},
									"scope": 253,
									"src": "8487:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8827:80:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:0",
													"nodeType": "YulBlock",
													"src": "8846:55:0",
													"statements": [
														{
															"nativeSrc": "8860:31:0",
															"nodeType": "YulAssignment",
															"src": "8860:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:0",
																"nodeType": "YulIdentifier",
																"src": "8870:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8837:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8795:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8795:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8795:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:0"
									},
									"scope": 253,
									"src": "8737:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 254,
							"src": "2349:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "113:8797:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							748
						],
						"IERC1822Proxiable": [
							445
						],
						"Initializable": [
							253
						],
						"UUPSUpgradeable": [
							435
						]
					},
					"id": 436,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 255,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 446,
							"src": "141:88:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 256,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "149:17:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 749,
							"src": "230:84:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 258,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 748,
										"src": "238:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 261,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 436,
							"sourceUnit": 254,
							"src": "315:50:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 260,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 253,
										"src": "323:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 263,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "1023:13:1"
									},
									"id": 264,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:1"
								},
								{
									"baseName": {
										"id": 265,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 445,
										"src": "1038:17:1"
									},
									"id": 266,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:1"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 262,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:1",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 435,
							"linearizedBaseContracts": [
								435,
								445,
								253
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:1",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 273,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "1128:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 268,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 271,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 270,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 269,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:1",
												"typeDescriptions": {}
											}
										},
										"id": 272,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:1",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 277,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:1",
									"nodeType": "VariableDeclaration",
									"scope": 435,
									"src": "1819:58:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 275,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:1",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 280,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:1"
									},
									"src": "1954:36:1"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:1",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 285,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2104:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:1"
									},
									"src": "2069:49:1"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "2643:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 288,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2653:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:1"
											},
											{
												"id": 291,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:1"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:1",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 293,
									"name": "onlyProxy",
									"nameLocation": "2631:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:1"
									},
									"src": "2622:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "2914:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 296,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2924:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:1"
											},
											{
												"id": 299,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:1"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:1",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 301,
									"name": "notDelegated",
									"nameLocation": "2899:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:1"
									},
									"src": "2890:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "3028:7:1",
										"statements": []
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 303,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "3011:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:1"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:1"
									},
									"scope": 435,
									"src": "2968:67:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3111:7:1",
										"statements": []
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "3094:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:1"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:1"
									},
									"scope": 435,
									"src": "3041:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										444
									],
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "3783:56:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 321,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "3800:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$748_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:1",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 475,
													"src": "3800:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 320,
												"id": 323,
												"nodeType": "Return",
												"src": "3793:39:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:1",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 316,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "3752:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:1"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:1"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "3774:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:1"
									},
									"scope": 435,
									"src": "3705:134:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "4263:109:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "4291:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 335,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "4273:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 328,
															"src": "4341:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "4360:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 339,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "4319:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:1"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:1",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 333,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 332,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 293,
												"src": "4253:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:1"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "4184:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "4211:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:1"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:1"
									},
									"scope": 435,
									"src": "4158:214:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "4644:267:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 351,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 349,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 353,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4688:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 355,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "4749:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$748_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:1",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 506,
																"src": "4749:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 358,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "4785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "4654:251:1",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "4844:61:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 361,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "4865:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 363,
															"nodeType": "RevertStatement",
															"src": "4858:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:1",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:1"
									},
									"scope": 435,
									"src": "4599:312:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "5080:161:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 373,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$435",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 371,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 375,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "5111:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "5090:145:1",
												"trueBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "5119:116:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 377,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "5195:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 379,
															"nodeType": "RevertStatement",
															"src": "5188:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:1",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:1"
									},
									"scope": 435,
									"src": "5028:213:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:1",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "5651:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:1"
									},
									"scope": 435,
									"src": "5624:71:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "6137:453:1",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 422,
															"nodeType": "Block",
															"src": "6227:212:1",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 405,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "6245:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 406,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "6253:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$748_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:1",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 475,
																			"src": "6253:32:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 414,
																	"nodeType": "IfStatement",
																	"src": "6241:120:1",
																	"trueBody": {
																		"id": 413,
																		"nodeType": "Block",
																		"src": "6287:74:1",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 410,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 403,
																							"src": "6341:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 409,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 285,
																						"src": "6312:28:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 411,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 412,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:1"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 418,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "6404:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 419,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "6423:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 415,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "6374:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$748_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:1",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 567,
																			"src": "6374:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 421,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:1"
																}
															]
														},
														"errorName": "",
														"id": 423,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 404,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 423,
																	"src": "6213:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:1"
														},
														"src": "6204:235:1"
													},
													{
														"block": {
															"id": 430,
															"nodeType": "Block",
															"src": "6446:138:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 427,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 392,
																				"src": "6555:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 424,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 748,
																				"src": "6513:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$748_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:1",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 480,
																			"src": "6513:41:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 429,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:1"
																}
															]
														},
														"errorName": "",
														"id": 431,
														"nodeType": "TryCatchClause",
														"src": "6440:144:1"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 398,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "6169:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 397,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "6151:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$445_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$445",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:1",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 444,
														"src": "6151:50:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:1",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 432,
												"nodeType": "TryStatement",
												"src": "6147:437:1"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:1",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6083:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "6110:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:1"
									},
									"scope": 435,
									"src": "6052:538:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 436,
							"src": "986:5606:1",
							"usedErrors": [
								16,
								19,
								280,
								285,
								480,
								493,
								771,
								774
							],
							"usedEvents": [
								24,
								459
							]
						}
					],
					"src": "115:6478:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							445
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 437,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 438,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:2",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:2",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:2"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "868:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:2"
									},
									"scope": 445,
									"src": "820:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "343:536:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1011
						],
						"ERC1967Utils": [
							748
						],
						"IBeacon": [
							758
						],
						"StorageSlot": [
							1121
						]
					},
					"id": 749,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 749,
							"sourceUnit": 759,
							"src": "140:46:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 448,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 758,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 749,
							"sourceUnit": 1012,
							"src": "187:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 450,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1011,
										"src": "195:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 453,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 749,
							"sourceUnit": 1122,
							"src": "236:56:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 452,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1121,
										"src": "244:11:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 454,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:3",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 748,
							"linearizedBaseContracts": [
								748
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:3",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 459,
									"name": "Upgraded",
									"nameLocation": "739:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "748:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:3"
									},
									"src": "733:47:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:3",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 466,
									"name": "AdminChanged",
									"nameLocation": "864:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "877:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "900:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:3"
									},
									"src": "858:60:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:3",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 471,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "1009:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:3"
									},
									"src": "988:45:3"
								},
								{
									"constant": true,
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:3",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 475,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:3",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "1279:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 473,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 474,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:3",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 480,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "1509:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:3"
									},
									"src": "1474:59:3"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:3",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 485,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "1630:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:3"
									},
									"src": "1604:41:3"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:3",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 490,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1744:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:3"
									},
									"src": "1717:43:3"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:3",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 493,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:3"
									},
									"src": "1853:26:3"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "2018:77:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 501,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "2062:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 499,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "2035:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1121_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1043,
															"src": "2035:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1017_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1016,
													"src": "2035:53:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 498,
												"id": 504,
												"nodeType": "Return",
												"src": "2028:60:3"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:3",
										"text": " @dev Returns the current implementation address."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:3"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2009:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:3"
									},
									"scope": 748,
									"src": "1957:138:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "2249:218:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 512,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "2263:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 522,
												"nodeType": "IfStatement",
												"src": "2259:119:3",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "2299:79:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 518,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 509,
																		"src": "2349:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 517,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "2320:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 520,
															"nodeType": "RevertStatement",
															"src": "2313:54:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 526,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "2414:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 523,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "2387:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1121_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1043,
																"src": "2387:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1017_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1016,
														"src": "2387:53:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 529,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "2443:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:3"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:3",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "2214:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:3"
									},
									"scope": 748,
									"src": "2186:281:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "2860:254:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 542,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "2889:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 541,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "2870:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 546,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "2931:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 545,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2922:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "EmitStatement",
												"src": "2917:32:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "2964:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 564,
													"nodeType": "Block",
													"src": "3065:43:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 561,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "3079:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 563,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:3"
														}
													]
												},
												"id": 565,
												"nodeType": "IfStatement",
												"src": "2960:148:3",
												"trueBody": {
													"id": 560,
													"nodeType": "Block",
													"src": "2981:78:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 556,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "3024:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 557,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "3043:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 553,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "2995:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1011_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 930,
																	"src": "2995:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 559,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:3",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2805:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2832:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 537,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:3"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:3"
									},
									"scope": 748,
									"src": "2779:335:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:3",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 571,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "3335:105:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 569,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 570,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "3844:68:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 579,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "3888:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 577,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "3861:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1121_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1043,
															"src": "3861:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1017_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1016,
													"src": "3861:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 576,
												"id": 582,
												"nodeType": "Return",
												"src": "3854:51:3"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:3",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:3"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "3835:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:3"
									},
									"scope": 748,
									"src": "3792:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "4039:172:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 590,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "4053:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 591,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "4049:91:3",
												"trueBody": {
													"id": 603,
													"nodeType": "Block",
													"src": "4077:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 597,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 596,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "4098:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 602,
															"nodeType": "RevertStatement",
															"src": "4091:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 608,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 571,
																	"src": "4176:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 605,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "4149:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1121_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1043,
																"src": "4149:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1017_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1016,
														"src": "4149:44:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 611,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "4196:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:3"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:3",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4013:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:3"
									},
									"scope": 748,
									"src": "3994:217:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "4379:85:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 622,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "4407:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4419:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 621,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "4394:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 626,
												"nodeType": "EmitStatement",
												"src": "4389:39:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4448:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 627,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:3"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:3",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "4352:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:3"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:3"
									},
									"scope": 748,
									"src": "4331:133:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:3",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 636,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 748,
									"src": "4741:106:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 634,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "4963:69:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 644,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "5007:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 642,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "4980:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1121_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1043,
															"src": "4980:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1017_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1016,
													"src": "4980:45:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 641,
												"id": 647,
												"nodeType": "Return",
												"src": "4973:52:3"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:3",
										"text": " @dev Returns the current beacon."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4954:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:3"
									},
									"scope": 748,
									"src": "4910:122:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "5161:390:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 655,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5175:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "5171:95:3",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "5203:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 661,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 652,
																		"src": "5245:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 660,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "5224:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 663,
															"nodeType": "RevertStatement",
															"src": "5217:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 669,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "5303:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 666,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "5276:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1121_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1043,
																"src": "5276:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1017_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1016,
														"src": "5276:45:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 672,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "5324:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:3"
											},
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:3",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "5344:28:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 675,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 682,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 678,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "5383:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 677,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "5375:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$758_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$758",
																"typeString": "contract IBeacon"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:3",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 757,
														"src": "5375:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 683,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "5424:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "5420:125:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "5463:82:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 689,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "5513:20:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 688,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "5484:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "5477:57:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:3",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "5134:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:3"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:3"
									},
									"scope": 748,
									"src": "5114:437:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "6155:254:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "6176:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 703,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "6165:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 708,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "6216:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 707,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "6201:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "EmitStatement",
												"src": "6196:30:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 711,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "6241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "6360:43:3",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 727,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "6374:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:3"
														}
													]
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "6237:166:3",
												"trueBody": {
													"id": 726,
													"nodeType": "Block",
													"src": "6258:96:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 719,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 698,
																						"src": "6309:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 718,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "6301:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$758_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$758",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:3",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 757,
																			"src": "6301:33:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 723,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 700,
																		"src": "6338:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 715,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "6272:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1011_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 930,
																	"src": "6272:28:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 725,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:3",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "6108:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "6127:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:3"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:3"
									},
									"scope": 748,
									"src": "6076:333:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "6634:86:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 737,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "6644:70:3",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "6663:51:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 741,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "6684:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "6677:26:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:3",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:3"
									},
									"scope": 748,
									"src": "6598:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 749,
							"src": "449:6273:3",
							"usedErrors": [
								480,
								485,
								490,
								493
							],
							"usedEvents": [
								459,
								466,
								471
							]
						}
					],
					"src": "114:6609:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							758
						]
					},
					"id": 759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 750,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 751,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:4",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 758,
							"linearizedBaseContracts": [
								758
							],
							"name": "IBeacon",
							"nameLocation": "224:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:4",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "460:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:4"
									},
									"scope": 758,
									"src": "411:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 759,
							"src": "214:257:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1011
						]
					},
					"id": 1012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 761,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 766,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 771,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 774,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 784,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1011",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1011",
																		"typeString": "library Address"
																	}
																],
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 782,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 787,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 797,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 792,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1011",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1011",
																					"typeString": "library Address"
																				}
																			],
																			"id": 791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 790,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 789,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 795,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													799,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 799,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 798,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 806,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 800,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 777,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 802,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 807,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 809,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 1011,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 826,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 827,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 825,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 824,
												"id": 830,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 1011,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 846,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1011",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1011",
																		"typeString": "library Address"
																	}
																],
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 849,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 854,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1011",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1011",
																					"typeString": "library Address"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													861,
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 860,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 870,
												"initialValue": {
													"arguments": [
														{
															"id": 868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 864,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 866,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 874,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 871,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 843,
												"id": 876,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 841,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 1011,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													889,
													891
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 888,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 891,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 903,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 890,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 896,
												"initialValue": {
													"arguments": [
														{
															"id": 894,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 892,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 900,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 897,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 887,
												"id": 902,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 885,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 1011,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													915,
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 915,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 914,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 916,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 922,
												"initialValue": {
													"arguments": [
														{
															"id": 920,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 918,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 924,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 926,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 923,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 913,
												"id": 928,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 1011,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 942,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 949,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 953,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 933,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 964,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 963,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 960,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 933,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 959,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 771,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 962,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 965,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 941,
															"id": 966,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 968,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 945,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 944,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 947,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 939,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 1011,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 980,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 989,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 987,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 979,
															"id": 988,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 990,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 986,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 983,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 982,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 985,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 977,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 1011,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 998,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1004,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 995,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 995,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 1002,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 994,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 1011,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1012,
							"src": "195:6066:5",
							"usedErrors": [
								766,
								771,
								774
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1121
						]
					},
					"id": 1122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1014,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:6",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1121,
							"linearizedBaseContracts": [
								1121
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1017,
									"members": [
										{
											"constant": false,
											"id": 1016,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1300:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1015,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:6",
									"nodeType": "StructDefinition",
									"scope": 1121,
									"src": "1271:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1020,
									"members": [
										{
											"constant": false,
											"id": 1019,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1020,
											"src": "1355:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1018,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:6",
									"nodeType": "StructDefinition",
									"scope": 1121,
									"src": "1326:46:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1023,
									"members": [
										{
											"constant": false,
											"id": 1022,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1023,
											"src": "1407:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1021,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:6",
									"nodeType": "StructDefinition",
									"scope": 1121,
									"src": "1378:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1026,
									"members": [
										{
											"constant": false,
											"id": 1025,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1026,
											"src": "1462:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1024,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:6",
									"nodeType": "StructDefinition",
									"scope": 1121,
									"src": "1433:49:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1029,
									"members": [
										{
											"constant": false,
											"id": 1028,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1029,
											"src": "1516:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1027,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:6",
									"nodeType": "StructDefinition",
									"scope": 1121,
									"src": "1488:47:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1032,
									"members": [
										{
											"constant": false,
											"id": 1031,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1032,
											"src": "1568:11:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1030,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:6",
									"nodeType": "StructDefinition",
									"scope": 1121,
									"src": "1541:45:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "1768:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:6",
													"nodeType": "YulBlock",
													"src": "1830:38:6",
													"statements": [
														{
															"nativeSrc": "1844:14:6",
															"nodeType": "YulAssignment",
															"src": "1844:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:6",
																"nodeType": "YulIdentifier",
																"src": "1854:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1039,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1035,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:6",
														"valueSize": 1
													}
												],
												"id": 1041,
												"nodeType": "InlineAssembly",
												"src": "1821:47:6"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:6",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1708:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:6"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "1745:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1038,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1037,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "1745:11:6"
													},
													"referencedDeclaration": 1017,
													"src": "1745:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1017_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:6"
									},
									"scope": 1121,
									"src": "1684:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "2056:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:6",
													"nodeType": "YulBlock",
													"src": "2118:38:6",
													"statements": [
														{
															"nativeSrc": "2132:14:6",
															"nodeType": "YulAssignment",
															"src": "2132:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:6",
																"nodeType": "YulIdentifier",
																"src": "2142:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1050,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1046,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:6",
														"valueSize": 1
													}
												],
												"id": 1052,
												"nodeType": "InlineAssembly",
												"src": "2109:47:6"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:6",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "1996:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:6"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "2033:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1020_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1049,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1048,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1020,
														"src": "2033:11:6"
													},
													"referencedDeclaration": 1020,
													"src": "2033:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1020_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:6"
									},
									"scope": 1121,
									"src": "1972:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "2344:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:6",
													"nodeType": "YulBlock",
													"src": "2406:38:6",
													"statements": [
														{
															"nativeSrc": "2420:14:6",
															"nodeType": "YulAssignment",
															"src": "2420:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:6",
																"nodeType": "YulIdentifier",
																"src": "2430:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1061,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1057,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:6",
														"valueSize": 1
													}
												],
												"id": 1063,
												"nodeType": "InlineAssembly",
												"src": "2397:47:6"
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:6",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "2284:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "2321:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1023_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1060,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1059,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1023,
														"src": "2321:11:6"
													},
													"referencedDeclaration": 1023,
													"src": "2321:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1023_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:6"
									},
									"scope": 1121,
									"src": "2260:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "2632:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:6",
													"nodeType": "YulBlock",
													"src": "2694:38:6",
													"statements": [
														{
															"nativeSrc": "2708:14:6",
															"nodeType": "YulAssignment",
															"src": "2708:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:6",
																"nodeType": "YulIdentifier",
																"src": "2718:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1072,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1068,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:6",
														"valueSize": 1
													}
												],
												"id": 1074,
												"nodeType": "InlineAssembly",
												"src": "2685:47:6"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:6",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2572:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:6"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2609:21:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1026_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1071,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1070,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1026,
														"src": "2609:11:6"
													},
													"referencedDeclaration": 1026,
													"src": "2609:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1026_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:6"
									},
									"scope": 1121,
									"src": "2548:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "2917:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:6",
													"nodeType": "YulBlock",
													"src": "2979:38:6",
													"statements": [
														{
															"nativeSrc": "2993:14:6",
															"nodeType": "YulAssignment",
															"src": "2993:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:6",
																"nodeType": "YulIdentifier",
																"src": "3003:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1083,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1079,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:6",
														"valueSize": 1
													}
												],
												"id": 1085,
												"nodeType": "InlineAssembly",
												"src": "2970:47:6"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:6",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2858:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1078,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:6"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2895:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1029_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1081,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1029,
														"src": "2895:10:6"
													},
													"referencedDeclaration": 1029,
													"src": "2895:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1029_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:6"
									},
									"scope": 1121,
									"src": "2835:188:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "3225:112:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:6",
													"nodeType": "YulBlock",
													"src": "3287:44:6",
													"statements": [
														{
															"nativeSrc": "3301:20:6",
															"nodeType": "YulAssignment",
															"src": "3301:20:6",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:6",
																"nodeType": "YulIdentifier",
																"src": "3311:10:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1094,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1090,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:6",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1096,
												"nodeType": "InlineAssembly",
												"src": "3278:53:6"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:6",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3158:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1089,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:6"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3203:20:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1029_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1093,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1092,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1029,
														"src": "3203:10:6"
													},
													"referencedDeclaration": 1029,
													"src": "3203:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1029_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:6"
									},
									"scope": 1121,
									"src": "3135:202:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "3513:106:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:6",
													"nodeType": "YulBlock",
													"src": "3575:38:6",
													"statements": [
														{
															"nativeSrc": "3589:14:6",
															"nodeType": "YulAssignment",
															"src": "3589:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:6",
																"nodeType": "YulIdentifier",
																"src": "3599:4:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1105,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1101,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:6",
														"valueSize": 1
													}
												],
												"id": 1107,
												"nodeType": "InlineAssembly",
												"src": "3566:47:6"
											}
										]
									},
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:6",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3455:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1100,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3492:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1032_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1103,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "3492:9:6"
													},
													"referencedDeclaration": 1032,
													"src": "3492:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1032_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:6"
									},
									"scope": 1121,
									"src": "3433:186:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "3816:112:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:6",
													"nodeType": "YulBlock",
													"src": "3878:44:6",
													"statements": [
														{
															"nativeSrc": "3892:20:6",
															"nodeType": "YulAssignment",
															"src": "3892:20:6",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:6",
																"nodeType": "YulIdentifier",
																"src": "3902:10:6"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:6"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1116,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1112,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:6",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1118,
												"nodeType": "InlineAssembly",
												"src": "3869:53:6"
											}
										]
									},
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:6",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3751:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:6"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3795:19:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1032_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1114,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "3795:9:6"
													},
													"referencedDeclaration": 1032,
													"src": "3795:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1032_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:6"
									},
									"scope": 1121,
									"src": "3729:199:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1122,
							"src": "1245:2685:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:6"
				},
				"id": 6
			},
			"contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol": {
				"ast": {
					"absolutePath": "contracts/mocks/dlp/DataLiquidityPoolImplementationV3Mock.sol",
					"exportedSymbols": {
						"DataLiquidityPoolImplementationV3Mock": [
							1136
						],
						"ERC1967Utils": [
							748
						],
						"IERC1822Proxiable": [
							445
						],
						"Initializable": [
							253
						],
						"UUPSUpgradeable": [
							435
						]
					},
					"id": 1137,
					"license": "Apache-2.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1137,
							"sourceUnit": 436,
							"src": "65:77:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1125,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"194:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 435,
										"src": "194:15:7"
									},
									"id": 1126,
									"nodeType": "InheritanceSpecifier",
									"src": "194:15:7"
								}
							],
							"canonicalName": "DataLiquidityPoolImplementationV3Mock",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1136,
							"linearizedBaseContracts": [
								1136,
								435,
								445,
								253
							],
							"name": "DataLiquidityPoolImplementationV3Mock",
							"nameLocation": "153:37:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f8a8fd6d",
									"id": 1128,
									"mutability": "mutable",
									"name": "test",
									"nameLocation": "231:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1136,
									"src": "216:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "216:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										389
									],
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "322:2:7",
										"statements": []
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "251:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1132,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "313:8:7"
									},
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "277:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "269:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:27:7"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:7"
									},
									"scope": 1136,
									"src": "242:82:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1137,
							"src": "144:182:7",
							"usedErrors": [
								16,
								19,
								280,
								285,
								480,
								493,
								771,
								774
							],
							"usedEvents": [
								24,
								459
							]
						}
					],
					"src": "39:288:7"
				},
				"id": 7
			}
		}
	}
}